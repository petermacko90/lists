{"version":3,"sources":["reducers/lists.js","reducers/items.js","localStorage.js","helpers.js","store/store.js","constants/action-types.js","middleware/middleware.js","components/Navigation/Navigation.js","actions/lists.js","components/List/List.js","components/Lists/Lists.js","actions/items.js","components/ListItem/ListItem.js","components/AddItem/AddItem.js","components/CurrentList/CurrentList.js","App.js","serviceWorker.js","index.js"],"names":["initialStateLists","lists","currentList","newListTitle","initialStateItems","items","currentItems","newItemName","loadState","serializedState","localStorage","getItem","JSON","parse","key","value","Date","err","checkEmptyString","name","replace","debounce","func","wait","immediate","timeout","context","this","args","arguments","callNow","clearTimeout","setTimeout","apply","persistedState","rootReducer","combineReducers","listsReducer","state","length","undefined","action","type","Object","objectSpread","payload","map","list","id","listId","modified","filter","newList","nextId","title","concat","itemsReducer","item","list_id","itemId","checked","newItem","store","createStore","applyMiddleware","next","maxId","getState","reduce","a","b","dispatch","thunkMiddleware","logger","subscribe","stringify","setItem","console","log","saveState","Navigation","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onWindowResize","window","innerWidth","setState","showToggleButton","showNavigationItems","toggleNavigation","onClickAddList","e","handleAddList","onKeyPressAddList","showInput","props","scrollToCurrentList","onAddList","addEventListener","_this$props","onSetNewListTitle","react_default","createElement","className","onClick","onChange","onKeyPress","placeholder","aria-label","Component","connect","addList","target","List","_ref","onClickList","onEnterList","tabIndex","toLocaleDateString","slice","Lists","handleSelectList","onSetCurrentList","onSetCurrentItems","onRequestLists","onRequestItems","_this2","listComponents","itemsProp","forEach","components_List_List","setCurrentList","ListItem","onClickDelete","onKeyUp","AddItem","onSetNewItemName","onClickAddItem","onKeyPressAddItem","CurrentList","handleDeleteList","confirm","onDeleteList","onClickDeleteItem","stopPropagation","handleDeleteItem","onClickItem","handleToggleItem","onKeyPressItem","onDeleteItem","onSetListDate","onToggleItem","handleAddItem","onAddItem","react","components_ListItem_ListItem","components_AddItem_AddItem","setListDate","deleteList","deleteItem","toggleItem","addItem","App","scroll","scrollIntoView","behavior","block","inline","components_Navigation_Navigation","components_Lists_Lists","style","minHeight","ref","components_CurrentList_CurrentList","Boolean","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uTASMA,EAAoB,CACxBC,MAAO,GACPC,YAAa,KACbC,aAAc,ICDVC,EAAoB,CACxBC,MAAO,GACPC,aAAc,GACdC,YAAa,ICdFC,EAAY,WACvB,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACF,OAEF,OAAOG,KAAKC,MAAMJ,EAAiB,SAACK,EAAKC,GACvC,MAAY,aAARD,EACK,IAAIE,KAAKD,GAETA,IAGX,MAAOE,GACP,SCdSC,EAAmB,SAACC,GAC/B,OAAKA,EAAKC,QAAQ,OAAQ,KAMrB,SAASC,EAASC,EAAMC,EAAMC,GACpC,IAAIC,EACJ,OAAO,WACJ,IAAIC,EAAUC,KACVC,EAAOC,UAKTC,EAAUN,IAAcC,EAC5BM,aAAaN,GACbA,EAAUO,WANE,WACXP,EAAU,KACLD,GAAWF,EAAKW,MAAMP,EAASE,IAITL,GACxBO,GAASR,EAAKW,MAAMP,EAASE,ICVnC,IAAMM,EAAiB1B,IACjB2B,EAAcC,YAAgB,CAAEC,aJKV,WAA4C,IAA3CC,EAA2CT,UAAAU,OAAA,QAAAC,IAAAX,UAAA,GAAAA,UAAA,GAAnC7B,EAAmByC,EAAgBZ,UAAAU,OAAA,QAAAC,IAAAX,UAAA,GAAAA,UAAA,GAAP,GAC/D,OAAQY,EAAOC,MACb,IKjBuB,cLkBrB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBrC,MAAOwC,EAAOI,UACnC,IKlB4B,mBLmB1B,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBpC,YAAauC,EAAOI,UACzC,IKnByB,gBLoBvB,IAAM5C,EAAQqC,EAAMrC,MAAM6C,IAAI,SAACC,GAC7B,OAAIA,EAAKC,KAAOP,EAAOI,QAAQI,OACtBN,OAAAC,EAAA,EAAAD,CAAA,GAAKI,EAASA,EAAKG,SAAWT,EAAOI,QAAQK,UAE9CH,IAEV,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBrC,UACrB,IK1BuB,cL2BrB,OAAO0C,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEErC,MAAOqC,EAAMrC,MAAMkD,OAAO,SAAAJ,GAAI,OAAIA,EAAKC,KAAOP,EAAOI,UACrD3C,YAAa,OAEjB,IK9B4B,mBL+B1B,IAAMkD,EAAU,CACdJ,GAAIP,EAAOI,QAAQQ,OACnBC,MAAOb,EAAOI,QAAQS,MACtBJ,SAAUT,EAAOI,QAAQK,UAE3B,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEErC,MAAOqC,EAAMrC,MAAMsD,OAAOH,GAC1BlD,YAAakD,EACbjD,aAAc,KAElB,IKzC8B,qBL0C5B,OAAOwC,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBnC,aAAcsC,EAAOI,UAC1C,QACE,OAAOP,IIxCuCkB,aHOxB,WAA4C,IAA3ClB,EAA2CT,UAAAU,OAAA,QAAAC,IAAAX,UAAA,GAAAA,UAAA,GAAnCzB,EAAmBqC,EAAgBZ,UAAAU,OAAA,QAAAC,IAAAX,UAAA,GAAAA,UAAA,GAAP,GAC/D,OAAQY,EAAOC,MACb,IIXuB,cJYrB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBjC,MAAOoC,EAAOI,UACnC,IIZ6B,oBJa3B,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEEhC,aAAcgC,EAAMjC,MAAM8C,OAAO,SAAAM,GAC/B,OAAOA,EAAKC,UAAYjB,EAAOI,YAGrC,IIlBuB,cJmBrB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEEjC,MAAOiC,EAAMjC,MAAM8C,OAAO,SAAAM,GAAI,OAAIA,EAAKT,KAAOP,EAAOI,UACrDvC,aAAcgC,EAAMhC,aAAa6C,OAAO,SAAAM,GACtC,OAAOA,EAAKT,KAAOP,EAAOI,YAGhC,IIzBuB,cJ0BrB,IAAMxC,EAAQiC,EAAMjC,MAAMyC,IAAI,SAACW,GAC7B,OAAIA,EAAKT,KAAOP,EAAOI,QAAQc,OACtBF,EAEFd,OAAAC,EAAA,EAAAD,CAAA,GAAKc,EAASA,EAAKG,SAAWnB,EAAOI,QAAQe,WAEhDtD,EAAegC,EAAMhC,aAAawC,IAAI,SAACW,GAC3C,OAAIA,EAAKT,KAAOP,EAAOI,QAAQc,OACtBF,EAEFd,OAAAC,EAAA,EAAAD,CAAA,GAAKc,EAASA,EAAKG,SAAWnB,EAAOI,QAAQe,WAEtD,OAAOjB,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBhC,eAAcD,UACnC,IIrC4B,mBJsC1B,IAAMwD,EAAU,CACdH,QAASjB,EAAOI,QAAQI,OACxBD,GAAIP,EAAOI,QAAQQ,OACnBlC,KAAMsB,EAAOI,QAAQ1B,KACrByC,SAAS,GAEX,OAAOjB,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEEjC,MAAOiC,EAAMjC,MAAMkD,OAAOM,GAC1BvD,aAAcgC,EAAMhC,aAAaiD,OAAOM,GACxCtD,YAAa,KAEjB,IIjD6B,oBJkD3B,OAAOoC,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmB/B,YAAakC,EAAOI,UACzC,II5D4B,mBJ6D1B,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBhC,aAAc,KACnC,IIhEuB,cJiErB,OAAOqC,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEEjC,MAAOiC,EAAMjC,MAAM8C,OAAO,SAAAM,GACxB,OAAOA,EAAKC,UAAYjB,EAAOI,UAEjCvC,aAAcgC,EAAMhC,aAAa6C,OAAO,SAAAM,GACtC,OAAOA,EAAKC,UAAYjB,EAAOI,YAGrC,QACE,OAAOP,MGnEPwB,EAAQC,YACZ5B,EACAD,EACA8B,YEVqC,SAAAF,GAAK,OAAI,SAAAG,GAAI,OAAI,SAAAxB,GACtD,GDOsB,aCPlBA,EAAOC,KAAmB,CAC5B,IACMwB,EADQJ,EAAMK,WAAWX,aAAanD,MACxB+D,OAAO,SAACC,EAAGC,GAC7B,OAAQD,EAAErB,GAAKsB,EAAEtB,GAAMqB,EAAErB,GAAKsB,EAAEtB,IAC/B,GACHc,EAAMS,SAAS,CACb7B,KDE0B,mBCD1BG,QAAS,CACPI,OAAQR,EAAOI,QAAQI,OACvB9B,KAAMsB,EAAOI,QAAQ1B,KACrBkC,OAAQa,EAAQ,KAItB,GDfsB,aCelBzB,EAAOC,KAAmB,CAC5B,IACMwB,EADQJ,EAAMK,WAAW9B,aAAapC,MACxBmE,OAAO,SAACC,EAAGC,GAC7B,OAAQD,EAAErB,GAAKsB,EAAEtB,GAAMqB,EAAErB,GAAKsB,EAAEtB,IAC/B,GACHc,EAAMS,SAAS,CACb7B,KDpB0B,mBCqB1BG,QAAS,CACPS,MAAOb,EAAOI,QAAQS,MACtBD,OAAQa,EAAQ,EAChBhB,SAAUT,EAAOI,QAAQK,YAI/Be,EAAKxB,MFnBoC+B,IAAiBC,WAG5DX,EAAMY,UACJrD,EAAS,YFAc,SAACiB,GACxB,IACE,IAAM7B,EAAkBG,KAAK+D,UAAUrC,GACvC5B,aAAakE,QAAQ,QAASnE,GAC9B,MAAOQ,GACP4D,QAAQC,IAAI,iCAAmC7D,IEJ/C8D,CAAU,CACR1C,aAAc,CAAEpC,MAAO6D,EAAMK,WAAW9B,aAAapC,OACrDuD,aAAc,CAAEnD,MAAOyD,EAAMK,WAAWX,aAAanD,UAEtD,MAGUyD,mDGPTkB,qBACJ,SAAAA,IAAc,IAAAC,EAAA,OAAAtC,OAAAuC,EAAA,EAAAvC,CAAAhB,KAAAqD,IACZC,EAAAtC,OAAAwC,EAAA,EAAAxC,CAAAhB,KAAAgB,OAAAyC,EAAA,EAAAzC,CAAAqC,GAAAK,KAAA1D,QAaF2D,eAAiB,WACXC,OAAOC,YAAc,IACvBP,EAAKQ,SAAS,CACZC,kBAAkB,EAClBC,qBAAqB,IAGvBV,EAAKQ,SAAS,CACZC,kBAAkB,KAtBVT,EA2BdW,iBAAmB,WACjBX,EAAKQ,SAAS,CAAEE,qBAAsBV,EAAK3C,MAAMqD,uBA5BrCV,EAiCdY,eAAiB,SAACvC,GAAD,OAAW,SAACwC,GAC3Bb,EAAKc,cAAczC,KAlCP2B,EAqCde,kBAAoB,SAAC1C,GAAD,OAAW,SAACwC,GAChB,UAAVA,EAAEhF,KACJmE,EAAKc,cAAczC,KAvCT2B,EA2Cdc,cAAgB,SAACzC,GACf,GAAI2B,EAAK3C,MAAM2D,UAAW,CACxB,GAAI/E,EAAiBoC,GAEnB,YADA2B,EAAKQ,SAAS,CAAEQ,WAAW,IAG7BhB,EAAKiB,MAAMC,sBACXlB,EAAKiB,MAAME,UAAU9C,QAErB2B,EAAKQ,SAAS,CAAEQ,WAAW,KAlD7BhB,EAAK3C,MAAQ,CACXoD,kBAAkB,EAClBC,qBAAqB,EACrBM,WAAW,GALDhB,mFAUZM,OAAOc,iBAAiB,SAAUhF,EAASM,KAAK2D,eAAgB,MAChE3D,KAAK2D,kDA6CE,IAAAgB,EACqC3E,KAAKuE,MAAzC/F,EADDmG,EACCnG,aAAcoG,EADfD,EACeC,kBAEtB,OACEC,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,sCACbF,EAAAnC,EAAAoC,cAAA,MAAIC,UAAU,wBAAd,SAEE/E,KAAKW,MAAMqD,qBACTa,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,wBACbF,EAAAnC,EAAAoC,cAAA,UAAQ/D,KAAK,SAASiE,QAAShF,KAAKkE,eAAe1F,GACnDuG,UAAU,2FADV,YAKE/E,KAAKW,MAAM2D,WACTO,EAAAnC,EAAAoC,cAAA,SACE/D,KAAK,OACL3B,MAAOZ,EACPyG,SAAUL,EACVM,WAAYlF,KAAKqE,kBAAkB7F,GACnC2G,YAAY,aACZJ,UAAU,oCAMpB/E,KAAKW,MAAMoD,kBACTc,EAAAnC,EAAAoC,cAAA,UAAQ/D,KAAK,SAASiE,QAAShF,KAAKiE,iBACpCc,UAAU,kDACVK,aAAW,qBACTP,EAAAnC,EAAAoC,cAAA,QAAMC,UAAU,QAChBF,EAAAnC,EAAAoC,cAAA,QAAMC,UAAU,QAChBF,EAAAnC,EAAAoC,cAAA,QAAMC,UAAU,iBA1FLM,cAkGVC,cA/GS,SAAC3E,GACvB,MAAO,CACLnC,aAAcmC,EAAMD,aAAalC,eAIV,SAACoE,GAC1B,MAAO,CACL6B,UAAW,SAAC9C,GAAD,OAAWiB,ECgBH,SAACjB,GAAD,MAAY,CACjCZ,KH3BsB,WG4BtBG,QAAS,CAAES,QAAOJ,SAAU,IAAIlC,ODlBCkG,CAAQ5D,KACvCiD,kBAAmB,SAACT,GAAD,OAAOvB,ECoBa,CACzC7B,KH9BgC,qBG+BhCG,QDtBqDiD,EAAEqB,OAAOpG,WAsGjDkG,CAA6CjC,GEhG7CoC,SAlBF,SAAAC,GAA+C,IAA5CtE,EAA4CsE,EAA5CtE,KAAM1C,EAAsCgH,EAAtChH,MAAOiH,EAA+BD,EAA/BC,YAAaC,EAAkBF,EAAlBE,YACzC,OACCf,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,uDACfc,SAAS,IAAIb,QAASW,EAAYvE,EAAMA,EAAKC,IAC7C6D,WAAYU,EAAYxE,EAAMA,EAAKC,KAClCwD,EAAAnC,EAAAoC,cAAA,MAAIC,UAAU,yBAAyB3D,EAAKO,OAC5CkD,EAAAnC,EAAAoC,cAAA,SAAI1D,EAAKG,SAASuE,sBAClBjB,EAAAnC,EAAAoC,cAAA,KAAGC,UAAU,uBAEXrG,EAAMqH,MAAM,EAAG,GAAG5E,IAAI,SAACW,GACtB,OAAO+C,EAAAnC,EAAAoC,cAAA,QAAM3F,IAAK2C,EAAKT,IAAhB,KAAuBS,EAAKtC,KAA5B,WCUPwG,oNAOJL,YAAc,SAACvE,EAAME,GAAP,OAAkB,SAAC6C,GAC/Bb,EAAK2C,iBAAiB7E,EAAME,OAG9BsE,YAAc,SAACxE,EAAME,GAAP,OAAkB,SAAC6C,GACjB,UAAVA,EAAEhF,KACJmE,EAAK2C,iBAAiB7E,EAAME,OAIhC2E,iBAAmB,SAAC7E,EAAME,GACxBgC,EAAKiB,MAAM2B,iBAAiB9E,GAC5BkC,EAAKiB,MAAM4B,kBAAkB7E,GAC7BgC,EAAKiB,MAAMC,0GAlBXxE,KAAKuE,MAAM6B,iBACXpG,KAAKuE,MAAM8B,kDAoBJ,IAAAC,EAAAtG,KAAA2E,EACkB3E,KAAKuE,MAAtBjG,EADDqG,EACCrG,MAAOI,EADRiG,EACQjG,MACX6H,EAAiB,GACjBC,EAAY,GAoBhB,OAlBAlI,EAAMmI,QAAQ,SAACrF,GACb1C,EAAM+H,QAAQ,SAAC3E,GACTV,EAAKC,KAAOS,EAAKC,UACnByE,EAAYA,EAAU5E,OAAOE,MAGjCyE,EAAiBA,EAAe3E,OAC9BiD,EAAAnC,EAAAoC,cAAC4B,EAAD,CACEvH,IAAKiC,EAAKC,GACVD,KAAMA,EACN1C,MAAO8H,EACPb,YAAaW,EAAKX,YAClBC,YAAaU,EAAKV,eAGtBY,EAAY,KAIZ3B,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,mCAEXwB,EAAe3F,OAAS,EACpB2F,EACA1B,EAAAnC,EAAAoC,cAAA,KAAGC,UAAU,WAAb,0BAnDMM,cA0DLC,cA1ES,SAAC3E,GACvB,MAAO,CACLrC,MAAOqC,EAAMD,aAAapC,MAC1BI,MAAOiC,EAAMkB,aAAanD,QAIH,SAACkE,GAC1B,MAAO,CACLwD,eAAgB,kBAAMxD,EFNQ,SAACA,GAEjCA,EAAS,CAAE7B,KHZc,cGYKG,aADAL,IAAhBhC,IAA4B,GAAKA,IAAY6B,aAAapC,WEMtE+H,eAAgB,kBAAMzD,ECPQ,SAACA,GAEjCA,EAAS,CAAE7B,KNJc,cMIKG,aADAL,IAAhBhC,IAA4B,GAAKA,IAAYgD,aAAanD,WDOtEwH,iBAAkB,SAAC9E,GAAD,OAAUwB,EFHF,SAACxB,GAAD,MAAW,CACvCL,KHf8B,mBGgB9BG,QAASE,GEC8BuF,CAAevF,KACpD+E,kBAAmB,SAACzH,GAAD,OAAWkE,ECJU,CAC1C7B,KNP+B,oBMQ/BG,QDEyDxC,OA8D5C4G,CAA6CU,GE/D7CY,EAhBE,SAAAlB,GAEX,IADJrE,EACIqE,EADJrE,GAAIC,EACAoE,EADApE,OAAQW,EACRyD,EADQzD,QAASzC,EACjBkG,EADiBlG,KAAMwF,EACvBU,EADuBV,QAAS6B,EAChCnB,EADgCmB,cAAe3B,EAC/CQ,EAD+CR,WAEnD,OACEL,EAAAnC,EAAAoC,cAAA,MAAIC,UAAW,qBAAuB9C,EAAU,WAAa,IAC7D4D,SAAS,IAAIiB,QAAS5B,EAAW5D,EAAQD,EAAIY,GAC7C+C,QAASA,EAAQ1D,EAAQD,EAAIY,IAC1BzC,EACDqF,EAAAnC,EAAAoC,cAAA,QAAMC,UAAU,QAAQpD,MAAM,cAC9BqD,QAAS6B,EAAcvF,EAAQD,IAD/B,UCaS0F,EArBC,SAAArB,GAEV,IADJpE,EACIoE,EADJpE,OAAQ1C,EACJ8G,EADI9G,YAAaoI,EACjBtB,EADiBsB,iBAAkBC,EACnCvB,EADmCuB,eAAgBC,EACnDxB,EADmDwB,kBAEvD,OACErC,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,OACbF,EAAAnC,EAAAoC,cAAA,SACE/D,KAAK,OACL3B,MAAOR,EACPqG,SAAU+B,EACV9B,WAAYgC,EAAkB5F,EAAQ1C,GACtCuG,YAAY,WACZJ,UAAU,gBAEZF,EAAAnC,EAAAoC,cAAA,UAAQ/D,KAAK,SAASiE,QAASiC,EAAe3F,EAAQ1C,GACtDmG,UAAU,gEADV,SCeAoC,oNAEJC,iBAAmB,SAAC9F,GAAD,OAAY,SAAC6C,GAC1BP,OAAOyD,QAAQ,+CACjB/D,EAAKiB,MAAM+C,aAAahG,OAK5BiG,kBAAoB,SAACjG,EAAQU,GAAT,OAAoB,SAACmC,GACvCA,EAAEqD,kBACFlE,EAAKmE,iBAAiBnG,EAAQU,OAGhC0F,YAAc,SAACpG,EAAQU,EAAQC,GAAjB,OAA6B,SAACkC,GAC1Cb,EAAKqE,iBAAiBrG,EAAQU,EAAQC,OAGxC2F,eAAiB,SAACtG,EAAQU,EAAQC,GAAjB,OAA6B,SAACkC,GAC/B,WAAVA,EAAEhF,IACJmE,EAAKmE,iBAAiBnG,EAAQU,GACX,UAAVmC,EAAEhF,KACXmE,EAAKqE,iBAAiBrG,EAAQU,EAAQC,OAI1CwF,iBAAmB,SAACnG,EAAQU,GACtB4B,OAAOyD,QAAQ,gDACjB/D,EAAKiB,MAAMsD,aAAa7F,GACxBsB,EAAKiB,MAAMuD,cAAcxG,OAI7BqG,iBAAmB,SAACrG,EAAQU,EAAQC,GAClCqB,EAAKiB,MAAMwD,aAAa/F,EAAQC,GAChCqB,EAAKiB,MAAMuD,cAAcxG,MAI3B2F,eAAiB,SAAC3F,EAAQ9B,GAAT,OAAkB,SAAC2E,GAClCb,EAAK0E,cAAc1G,EAAQ9B,OAG7B0H,kBAAoB,SAAC5F,EAAQ9B,GAAT,OAAkB,SAAC2E,GACvB,UAAVA,EAAEhF,KACJmE,EAAK0E,cAAc1G,EAAQ9B,OAI/BwI,cAAgB,SAAC1G,EAAQ9B,GACnBD,EAAiBC,KAGrB8D,EAAKiB,MAAM0D,UAAU3G,EAAQ9B,GAC7B8D,EAAKiB,MAAMuD,cAAcxG,6EAGlB,IAAAgF,EAAAtG,KAAA2E,EACgD3E,KAAKuE,MAApDnD,EADDuD,EACCvD,KAAM1C,EADPiG,EACOjG,MAAOE,EADd+F,EACc/F,YAAaoI,EAD3BrC,EAC2BqC,iBAClC,OAAK5F,EAGHyD,EAAAnC,EAAAoC,cAACoD,EAAA,SAAD,KACErD,EAAAnC,EAAAoC,cAAA,UAAQ/D,KAAK,SAASiE,QAAShF,KAAKoH,iBAAiBhG,EAAKC,IAC1D0D,UAAU,4DADV,UAIAF,EAAAnC,EAAAoC,cAAA,MAAIC,UAAU,6BAA6B3D,EAAKO,OAChDkD,EAAAnC,EAAAoC,cAAA,SAAI1D,EAAKG,SAASuE,sBAClBjB,EAAAnC,EAAAoC,cAAA,UAEIpG,EAAMkC,OAAS,EACblC,EAAMyC,IAAI,SAACW,GACT,OACE+C,EAAAnC,EAAAoC,cAACqD,EAAD,CACEhJ,IAAK2C,EAAKT,GACVA,GAAIS,EAAKT,GACTC,OAAQF,EAAKC,GACbY,QAASH,EAAKG,QACdzC,KAAMsC,EAAKtC,KACXwF,QAASsB,EAAKoB,YACdb,cAAeP,EAAKiB,kBACpBrC,WAAYoB,EAAKsB,mBAKvB/C,EAAAnC,EAAAoC,cAAA,sBAGND,EAAAnC,EAAAoC,cAACsD,EAAD,CACE9G,OAAQF,EAAKC,GACbzC,YAAaA,EACboI,iBAAkBA,EAClBC,eAAgBjH,KAAKiH,eACrBC,kBAAmBlH,KAAKkH,qBApCZ,YA3DI7B,cAsGXC,cAzHS,SAAC3E,GACvB,MAAO,CACLS,KAAMT,EAAMD,aAAanC,YACzBG,MAAOiC,EAAMkB,aAAalD,aAC1BC,YAAa+B,EAAMkB,aAAajD,cAIT,SAACgE,GAC1B,MAAO,CACLkF,cAAe,SAACxG,GAAD,OAAYsB,ENDJ,SAACtB,GAAD,MAAa,CACtCP,KHnB2B,gBGoB3BG,QAAS,CAAEI,SAAQC,SAAU,IAAIlC,OMDKgJ,CAAY/G,KAChDgG,aAAc,SAAChG,GAAD,OAAYsB,ENGJ,SAACtB,GAAD,MAAa,CACrCP,KHvByB,cGwBzBG,QAASI,GML4BgH,CAAWhH,KAC9CuG,aAAc,SAAC7F,GAAD,OAAYY,EHHJ,SAACZ,GAAD,MAAa,CACrCjB,KNXyB,cMYzBG,QAASc,GGC4BuG,CAAWvG,KAC9C+F,aAAc,SAAC/F,EAAQC,GAAT,OAAqBW,EHCb,SAACZ,EAAQC,GAAT,MAAsB,CAC9ClB,KNfyB,cMgBzBG,QAAS,CAAEc,SAAQC,YGH2BuG,CAAWxG,EAAQC,KAC/DgG,UAAW,SAAC3G,EAAQ9B,GAAT,OAAkBoD,EHKV,SAACtB,EAAQ9B,GAAT,MAAmB,CACxCuB,KNnBsB,WMoBtBG,QAAS,CAAEI,SAAQ9B,SGPqBiJ,CAAQnH,EAAQ9B,KACtDwH,iBAAkB,SAAC7C,GAAD,OAAOvB,EHSY,CACvC7B,KNtB+B,oBMuB/BG,QGXmDiD,EAAEqB,OAAOpG,WA0G/CkG,CAA6C6B,GCvG7CuB,6MAvBblE,oBAAsB,WAChBZ,OAAOC,WAAa,KACtBP,EAAKqF,OAAOC,eAAe,CACzBC,SAAU,SAAUC,MAAO,QAASC,OAAQ,qFAKzC,IAAAzC,EAAAtG,KACP,OACE6E,EAAAnC,EAAAoC,cAACoD,EAAA,SAAD,KACErD,EAAAnC,EAAAoC,cAACkE,EAAD,CAAYxE,oBAAqBxE,KAAKwE,sBACtCK,EAAAnC,EAAAoC,cAACmE,EAAD,CAAOzE,oBAAqBxE,KAAKwE,sBACjCK,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,qCACfmE,MAAO,CAACC,UAAW,UACjBtE,EAAAnC,EAAAoC,cAAA,OAAKsE,IAAK,SAACA,GAAD,OAAS9C,EAAKqC,OAASS,KACjCvE,EAAAnC,EAAAoC,cAACuE,EAAD,eAjBQhE,aCOEiE,QACW,cAA7B1F,OAAO2F,SAASC,UAEe,UAA7B5F,OAAO2F,SAASC,UAEhB5F,OAAO2F,SAASC,SAASC,MACvB,iECTNC,IAASC,OACP9E,EAAAnC,EAAAoC,cAAC8E,EAAA,EAAD,CAAUzH,MAAOA,GAAO0C,EAAAnC,EAAAoC,cAAC+E,EAAD,OACxBC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.45ae90f3.chunk.js","sourcesContent":["import {\r\n  FETCH_LISTS,\r\n  SET_CURRENT_LIST,\r\n  SET_LIST_DATE,\r\n  DELETE_LIST,\r\n  ADD_LIST_WITH_ID,\r\n  SET_NEW_LIST_TITLE\r\n} from '../constants/action-types';\r\n\r\nconst initialStateLists = {\r\n  lists: [],\r\n  currentList: null,\r\n  newListTitle: ''\r\n};\r\n\r\nexport const listsReducer = (state = initialStateLists, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_LISTS:\r\n      return { ...state, lists: action.payload };\r\n    case SET_CURRENT_LIST:\r\n      return { ...state, currentList: action.payload };\r\n    case SET_LIST_DATE:\r\n      const lists = state.lists.map((list) => {\r\n        if (list.id === action.payload.listId) {\r\n          return { ...list, ...list.modified = action.payload.modified };\r\n        }\r\n        return  list;\r\n      });\r\n      return { ...state, lists };\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        lists: state.lists.filter(list => list.id !== action.payload),\r\n        currentList: null\r\n      };\r\n    case ADD_LIST_WITH_ID:\r\n      const newList = {\r\n        id: action.payload.nextId,\r\n        title: action.payload.title,\r\n        modified: action.payload.modified\r\n      };\r\n      return {\r\n        ...state,\r\n        lists: state.lists.concat(newList),\r\n        currentList: newList,\r\n        newListTitle: ''\r\n      }\r\n    case SET_NEW_LIST_TITLE:\r\n      return { ...state, newListTitle: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_ITEMS,\r\n  SET_CURRENT_ITEMS,\r\n  DELETE_ITEM,\r\n  TOGGLE_ITEM,\r\n  ADD_ITEM_WITH_ID,\r\n  SET_NEW_ITEM_NAME,\r\n  ADD_LIST_WITH_ID,\r\n  DELETE_LIST\r\n} from '../constants/action-types';\r\n\r\nconst initialStateItems = {\r\n  items: [],\r\n  currentItems: [],\r\n  newItemName: ''\r\n};\r\n\r\nexport const itemsReducer = (state = initialStateItems, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_ITEMS:\r\n      return { ...state, items: action.payload };\r\n    case SET_CURRENT_ITEMS:\r\n      return {\r\n        ...state,\r\n        currentItems: state.items.filter(item => {\r\n          return item.list_id === action.payload;\r\n        })\r\n      };\r\n    case DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item.id !== action.payload),\r\n        currentItems: state.currentItems.filter(item => {\r\n          return item.id !== action.payload;\r\n        })\r\n      };\r\n    case TOGGLE_ITEM:\r\n      const items = state.items.map((item) => {\r\n        if (item.id !== action.payload.itemId) {\r\n          return item;\r\n        }\r\n        return { ...item, ...item.checked = !action.payload.checked };\r\n      });\r\n      const currentItems = state.currentItems.map((item) => {\r\n        if (item.id !== action.payload.itemId) {\r\n          return item;\r\n        }\r\n        return { ...item, ...item.checked = !action.payload.checked };\r\n      });\r\n      return { ...state, currentItems, items };\r\n    case ADD_ITEM_WITH_ID:\r\n      const newItem = {\r\n        list_id: action.payload.listId,\r\n        id: action.payload.nextId,\r\n        name: action.payload.name,\r\n        checked: false\r\n      };\r\n      return {\r\n        ...state,\r\n        items: state.items.concat(newItem),\r\n        currentItems: state.currentItems.concat(newItem),\r\n        newItemName: ''\r\n      };\r\n    case SET_NEW_ITEM_NAME:\r\n      return { ...state, newItemName: action.payload };\r\n    case ADD_LIST_WITH_ID:\r\n      return { ...state, currentItems: [] };\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => {\r\n          return item.list_id !== action.payload\r\n        }),\r\n        currentItems: state.currentItems.filter(item => {\r\n          return item.list_id !== action.payload\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState, (key, value) => {\r\n      if (key === 'modified') {\r\n        return new Date(value);\r\n      } else {\r\n        return value;\r\n      }\r\n    });\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.log('localStorage saveState error: ' + err);\r\n  }\r\n}\r\n","export const checkEmptyString = (name) => {\r\n  if (!name.replace(/\\s+/g, '')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function debounce(func, wait, immediate) {\r\n\tlet timeout;\r\n\treturn function() {\r\n    let context = this;\r\n    let args = arguments;\r\n\t\tlet later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tlet callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t}\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { logger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { listsReducer } from '../reducers/lists';\r\nimport { itemsReducer } from '../reducers/items';\r\nimport { addListOrItemMiddleware } from '../middleware/middleware';\r\nimport { loadState, saveState } from '../localStorage';\r\nimport { debounce } from '../helpers';\r\n\r\nconst persistedState = loadState();\r\nconst rootReducer = combineReducers({ listsReducer, itemsReducer });\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  applyMiddleware(addListOrItemMiddleware, thunkMiddleware, logger)\r\n);\r\n\r\nstore.subscribe(\r\n  debounce(() => {\r\n    saveState({\r\n      listsReducer: { lists: store.getState().listsReducer.lists },\r\n      itemsReducer: { items: store.getState().itemsReducer.items }\r\n    });\r\n  }, 1000)\r\n);\r\n\r\nexport default store;\r\n","export const FETCH_LISTS = 'FETCH_LISTS';\r\nexport const SET_CURRENT_LIST = 'SET_CURRENT_LIST';\r\nexport const SET_LIST_DATE = 'SET_LIST_DATE';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const ADD_LIST_WITH_ID = 'ADD_LIST_WITH_ID';\r\nexport const SET_NEW_LIST_TITLE = 'SET_NEW_LIST_TITLE';\r\n\r\nexport const FETCH_ITEMS = 'FETCH_ITEMS';\r\nexport const SET_CURRENT_ITEMS = 'SET_CURRENT_ITEMS';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const TOGGLE_ITEM = 'TOGGLE_ITEM';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const ADD_ITEM_WITH_ID = 'ADD_ITEM_WITH_ID';\r\nexport const SET_NEW_ITEM_NAME = 'SET_NEW_ITEM_NAME';\r\n","import {\r\n  ADD_ITEM, ADD_ITEM_WITH_ID, ADD_LIST, ADD_LIST_WITH_ID\r\n} from '../constants/action-types';\r\n\r\nexport const addListOrItemMiddleware = store => next => action => {\r\n  if (action.type === ADD_ITEM) {\r\n    const items = store.getState().itemsReducer.items;\r\n    const maxId = items.reduce((a, b) => {\r\n      return (a.id > b.id) ? a.id : b.id;\r\n    }, 0);\r\n    store.dispatch({\r\n      type: ADD_ITEM_WITH_ID,\r\n      payload: {\r\n        listId: action.payload.listId,\r\n        name: action.payload.name,\r\n        nextId: maxId + 1\r\n      }\r\n    });\r\n  }\r\n  if (action.type === ADD_LIST) {\r\n    const lists = store.getState().listsReducer.lists;\r\n    const maxId = lists.reduce((a, b) => {\r\n      return (a.id > b.id) ? a.id : b.id;\r\n    }, 0);\r\n    store.dispatch({\r\n      type: ADD_LIST_WITH_ID,\r\n      payload: {\r\n        title: action.payload.title,\r\n        nextId: maxId + 1,\r\n        modified: action.payload.modified\r\n      }\r\n    })\r\n  }\r\n  next(action);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setNewListTitle, addList } from '../../actions/lists';\r\nimport { checkEmptyString, debounce } from '../../helpers';\r\nimport './Navigation.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    newListTitle: state.listsReducer.newListTitle\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddList: (title) => dispatch(addList(title)),\r\n    onSetNewListTitle: (e) => dispatch(setNewListTitle(e.target.value))\r\n  };\r\n}\r\n\r\nclass Navigation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showToggleButton: true,\r\n      showNavigationItems: false,\r\n      showInput: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', debounce(this.onWindowResize, 250));\r\n    this.onWindowResize();\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    if (window.innerWidth >= 480) {\r\n      this.setState({\r\n        showToggleButton: false,\r\n        showNavigationItems: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showToggleButton: true\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleNavigation = () => {\r\n    this.setState({ showNavigationItems: !this.state.showNavigationItems });\r\n  }\r\n\r\n  /* handle adding a list */\r\n\r\n  onClickAddList = (title) => (e) => {\r\n    this.handleAddList(title);\r\n  }\r\n\r\n  onKeyPressAddList = (title) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleAddList(title);\r\n    }\r\n  }\r\n\r\n  handleAddList = (title) => {\r\n    if (this.state.showInput) {\r\n      if (checkEmptyString(title)) {\r\n        this.setState({ showInput: false });\r\n        return;\r\n      }\r\n      this.props.scrollToCurrentList();\r\n      this.props.onAddList(title);\r\n    } else {\r\n      this.setState({ showInput: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { newListTitle, onSetNewListTitle } = this.props;\r\n\r\n    return (\r\n      <nav className=\"flex bg-yellow shadow-2 mb2 navbar\">\r\n        <h1 className=\"f2 pa3 mv0 menu-item\">Lists</h1>\r\n        {\r\n          this.state.showNavigationItems &&\r\n            <div className=\"menu-item mh2 mh0-ns\">\r\n              <button type=\"button\" onClick={this.onClickAddList(newListTitle)}\r\n              className=\"white b--none ph3 ph4-ns pv3 b pointer bg-green hover-bg-dark-green mv3 add-list-button\">\r\n                Add list\r\n              </button>\r\n              {\r\n                this.state.showInput &&\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newListTitle}\r\n                    onChange={onSetNewListTitle}\r\n                    onKeyPress={this.onKeyPressAddList(newListTitle)}\r\n                    placeholder=\"List title\"\r\n                    className=\"pa3 b--none mv3 add-list-input\"\r\n                  />\r\n              }\r\n            </div>\r\n        }\r\n        {\r\n          this.state.showToggleButton &&\r\n            <button type=\"button\" onClick={this.toggleNavigation} \r\n            className=\"b--none pa3 ma3 pointer absolute right-0 toggle\"\r\n            aria-label=\"Toggle navigation\">\r\n              <span className=\"bar\"></span>\r\n              <span className=\"bar\"></span>\r\n              <span className=\"bar\"></span>\r\n            </button>\r\n        }\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n","import {\r\n  FETCH_LISTS,\r\n  SET_CURRENT_LIST,\r\n  SET_LIST_DATE,\r\n  DELETE_LIST,\r\n  ADD_LIST,\r\n  SET_NEW_LIST_TITLE\r\n} from '../constants/action-types';\r\nimport { loadState } from '../localStorage';\r\n\r\nexport const requestLists = () => (dispatch) => {\r\n  const lists = loadState() === undefined ? [] : loadState().listsReducer.lists;\r\n  dispatch({ type: FETCH_LISTS, payload: lists });\r\n}\r\n\r\nexport const setCurrentList = (list) => ({\r\n  type: SET_CURRENT_LIST,\r\n  payload: list\r\n});\r\n\r\nexport const setListDate = (listId) => ({\r\n  type: SET_LIST_DATE,\r\n  payload: { listId, modified: new Date() }\r\n});\r\n\r\nexport const deleteList = (listId) => ({\r\n  type: DELETE_LIST,\r\n  payload: listId\r\n});\r\n\r\nexport const addList = (title) => ({\r\n  type: ADD_LIST,\r\n  payload: { title, modified: new Date() }\r\n});\r\n\r\nexport const setNewListTitle = (title) => ({\r\n  type: SET_NEW_LIST_TITLE,\r\n  payload: title\r\n});\r\n","import React from 'react';\r\nimport './List.css';\r\n\r\nconst List = ({ list, items, onClickList, onEnterList }) => {\r\n\treturn (\r\n\t\t<div className=\"pa2 ma2 mt1 bg-yellow pointer shadow-3 noselect list\"\r\n\t\ttabIndex=\"0\" onClick={onClickList(list, list.id)}\r\n\t\tonKeyPress={onEnterList(list, list.id)}>\r\n\t\t\t<h3 className=\"f3-l f4-m f5 truncate\">{list.title}</h3>\r\n\t\t\t<p>{list.modified.toLocaleDateString()}</p>\r\n\t\t\t<p className=\"list-items truncate\">\r\n\t\t\t\t{\r\n\t\t\t\t\titems.slice(0, 5).map((item) => {\r\n\t\t\t\t\t\treturn <span key={item.id}>- {item.name} </span>;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport List from '../List/List';\r\nimport './Lists.css';\r\nimport { requestLists, setCurrentList } from '../../actions/lists';\r\nimport { requestItems, setCurrentItems } from '../../actions/items';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    lists: state.listsReducer.lists,\r\n    items: state.itemsReducer.items\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRequestLists: () => dispatch(requestLists()),\r\n    onRequestItems: () => dispatch(requestItems()),\r\n    onSetCurrentList: (list) => dispatch(setCurrentList(list)),\r\n    onSetCurrentItems: (items) => dispatch(setCurrentItems(items))\r\n  }\r\n}\r\n\r\nclass Lists extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestLists();\r\n    this.props.onRequestItems();\r\n  }\r\n\r\n  /* handle selecting a list */\r\n  onClickList = (list, listId) => (e) => {\r\n    this.handleSelectList(list, listId);\r\n  }\r\n\r\n  onEnterList = (list, listId) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleSelectList(list, listId);\r\n    }\r\n  }\r\n\r\n  handleSelectList = (list, listId) => {\r\n    this.props.onSetCurrentList(list);\r\n    this.props.onSetCurrentItems(listId);\r\n    this.props.scrollToCurrentList();\r\n  }\r\n\r\n  render() {\r\n    const { lists, items } = this.props;\r\n    let listComponents = [];\r\n    let itemsProp = [];\r\n\r\n    lists.forEach((list) => {\r\n      items.forEach((item) => {\r\n        if (list.id === item.list_id) {\r\n          itemsProp = itemsProp.concat(item);\r\n        }\r\n      });\r\n      listComponents = listComponents.concat(\r\n        <List\r\n          key={list.id}\r\n          list={list}\r\n          items={itemsProp}\r\n          onClickList={this.onClickList}\r\n          onEnterList={this.onEnterList}\r\n        />\r\n      );\r\n      itemsProp = [];\r\n    });\r\n\r\n    return (\r\n      <div className=\"fl w-25-l w-third-m w-100 lists\">\r\n        {\r\n          listComponents.length > 0\r\n            ? listComponents\r\n            : <p className=\"message\">No lists found</p>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Lists);\r\n","import {\r\n  FETCH_ITEMS,\r\n  SET_CURRENT_ITEMS,\r\n  DELETE_ITEM,\r\n  TOGGLE_ITEM,\r\n  ADD_ITEM,\r\n  SET_NEW_ITEM_NAME\r\n} from '../constants/action-types';\r\nimport { loadState } from '../localStorage';\r\n\r\nexport const requestItems = () => (dispatch) => {\r\n  const items = loadState() === undefined ? [] : loadState().itemsReducer.items;\r\n  dispatch({ type: FETCH_ITEMS, payload: items });\r\n}\r\n\r\nexport const setCurrentItems = (listId) => ({\r\n  type: SET_CURRENT_ITEMS,\r\n  payload: listId\r\n});\r\n\r\nexport const deleteItem = (itemId) => ({\r\n  type: DELETE_ITEM,\r\n  payload: itemId\r\n});\r\n\r\nexport const toggleItem = (itemId, checked) => ({\r\n  type: TOGGLE_ITEM,\r\n  payload: { itemId, checked }\r\n});\r\n\r\nexport const addItem = (listId, name) => ({\r\n  type: ADD_ITEM,\r\n  payload: { listId, name }\r\n});\r\n\r\nexport const setNewItemName = (text) => ({\r\n  type: SET_NEW_ITEM_NAME,\r\n  payload: text\r\n});\r\n","import React from 'react';\r\n\r\nconst ListItem = ({\r\n  id, listId, checked, name, onClick, onClickDelete, onKeyPress\r\n}) => {\r\n  return (\r\n    <li className={\"truncate noselect\" + (checked ? ' checked' : '')}\r\n    tabIndex=\"0\" onKeyUp={onKeyPress(listId, id, checked)}\r\n    onClick={onClick(listId, id, checked)}>\r\n      {name}\r\n      <span className=\"close\" title=\"Delete item\"\r\n      onClick={onClickDelete(listId, id)}>\r\n        &times;\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\n\r\nconst AddItem = ({\r\n  listId, newItemName, onSetNewItemName, onClickAddItem, onKeyPressAddItem\r\n}) => {\r\n  return (\r\n    <div className=\"mt3\">\r\n      <input\r\n        type=\"text\"\r\n        value={newItemName}\r\n        onChange={onSetNewItemName}\r\n        onKeyPress={onKeyPressAddItem(listId, newItemName)}\r\n        placeholder=\"Add item\"\r\n        className=\"pa3 b--none\"\r\n      />\r\n      <button type=\"button\" onClick={onClickAddItem(listId, newItemName)}\r\n      className=\"white b--none ph4 pv3 b pointer bg-green hover-bg-dark-green\">\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddItem;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setListDate, deleteList } from '../../actions/lists';\r\nimport {\r\n  deleteItem, toggleItem, addItem, setNewItemName\r\n} from '../../actions/items';\r\nimport { checkEmptyString } from '../../helpers';\r\nimport ListItem from '../ListItem/ListItem';\r\nimport AddItem from '../AddItem/AddItem';\r\nimport './CurrentList.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.listsReducer.currentList,\r\n    items: state.itemsReducer.currentItems,\r\n    newItemName: state.itemsReducer.newItemName\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSetListDate: (listId) => dispatch(setListDate(listId)),\r\n    onDeleteList: (listId) => dispatch(deleteList(listId)),\r\n    onDeleteItem: (itemId) => dispatch(deleteItem(itemId)),\r\n    onToggleItem: (itemId, checked) => dispatch(toggleItem(itemId, checked)),\r\n    onAddItem: (listId, name) => dispatch(addItem(listId, name)),\r\n    onSetNewItemName: (e) => dispatch(setNewItemName(e.target.value))\r\n  }\r\n}\r\n\r\nclass CurrentList extends Component {\r\n  /* handle deleting a list */\r\n  handleDeleteList = (listId) => (e) => {\r\n    if (window.confirm('Are you sure you want to delete this list?')) {\r\n      this.props.onDeleteList(listId);\r\n    }\r\n  }\r\n\r\n  /* handle toggling an item and deleting an item */\r\n  onClickDeleteItem = (listId, itemId) => (e) => {\r\n    e.stopPropagation();\r\n    this.handleDeleteItem(listId, itemId);\r\n  }\r\n\r\n  onClickItem = (listId, itemId, checked) => (e) => {\r\n    this.handleToggleItem(listId, itemId, checked);\r\n  }\r\n\r\n  onKeyPressItem = (listId, itemId, checked) => (e) => {\r\n    if (e.key === 'Delete') {\r\n      this.handleDeleteItem(listId, itemId);\r\n    } else if (e.key === 'Enter') {\r\n      this.handleToggleItem(listId, itemId, checked);\r\n    }\r\n  }\r\n\r\n  handleDeleteItem = (listId, itemId) => {\r\n    if (window.confirm('Are you sure you want to delete this item?')) {\r\n      this.props.onDeleteItem(itemId);\r\n      this.props.onSetListDate(listId);\r\n    }\r\n  }\r\n\r\n  handleToggleItem = (listId, itemId, checked) => {\r\n    this.props.onToggleItem(itemId, checked);\r\n    this.props.onSetListDate(listId);\r\n  }\r\n\r\n  /* handle adding an item */\r\n  onClickAddItem = (listId, name) => (e) => {\r\n    this.handleAddItem(listId, name);\r\n  }\r\n\r\n  onKeyPressAddItem = (listId, name) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleAddItem(listId, name);\r\n    }\r\n  }\r\n\r\n  handleAddItem = (listId, name) => {\r\n    if (checkEmptyString(name)) {\r\n      return;\r\n    }\r\n    this.props.onAddItem(listId, name);\r\n    this.props.onSetListDate(listId);\r\n  }\r\n\r\n  render() {\r\n    const { list, items, newItemName, onSetNewItemName } = this.props;\r\n    if (!list) return null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <button type=\"button\" onClick={this.handleDeleteList(list.id)}\r\n        className=\"white b--none ph4 pv3 b pointer bg-red hover-bg-dark-red\">\r\n          Delete\r\n        </button>\r\n        <h2 className=\"f2-l f3-m f4 mv4 truncate\">{list.title}</h2>\r\n        <p>{list.modified.toLocaleDateString()}</p>\r\n        <ul>\r\n          {\r\n            items.length > 0 ?\r\n              items.map((item) => {\r\n                return (\r\n                  <ListItem\r\n                    key={item.id}\r\n                    id={item.id}\r\n                    listId={list.id}\r\n                    checked={item.checked}\r\n                    name={item.name}\r\n                    onClick={this.onClickItem}\r\n                    onClickDelete={this.onClickDeleteItem}\r\n                    onKeyPress={this.onKeyPressItem}\r\n                  />\r\n                );\r\n              })\r\n            :\r\n              <p>No items</p>\r\n          }\r\n        </ul>\r\n        <AddItem\r\n          listId={list.id}\r\n          newItemName={newItemName}\r\n          onSetNewItemName={onSetNewItemName}\r\n          onClickAddItem={this.onClickAddItem}\r\n          onKeyPressAddItem={this.onKeyPressAddItem}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentList);\r\n","import React, { Component, Fragment } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Lists from './components/Lists/Lists';\nimport CurrentList from './components/CurrentList/CurrentList';\n\nclass App extends Component {\n  scrollToCurrentList = () => {\n    if (window.innerWidth < 480) {\n      this.scroll.scrollIntoView({\n        behavior: 'smooth', block: 'start', inline: 'nearest'\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Navigation scrollToCurrentList={this.scrollToCurrentList} />\n        <Lists scrollToCurrentList={this.scrollToCurrentList} />\n        <div className=\"fl w-75-l w-two-thirds-m w-100 pa3\"\n        style={{minHeight: '400px'}}>\n          <div ref={(ref) => this.scroll = ref} />\n          <CurrentList />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}