{"version":3,"sources":["reducers/lists.js","reducers/items.js","store/store.js","constants/action-types.js","middleware/middleware.js","helpers.js","components/Navigation/Navigation.js","actions/lists.js","components/List/List.js","components/Lists/Lists.js","actions/items.js","components/ListItem/ListItem.js","components/AddItem/AddItem.js","components/CurrentList/CurrentList.js","App.js","serviceWorker.js","index.js"],"names":["initialStateLists","lists","currentList","newListTitle","initialStateItems","items","currentItems","newItemName","rootReducer","combineReducers","listsReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","map","list","id","listId","modified","filter","newList","nextId","title","concat","itemsReducer","item","list_id","itemId","checked","newItem","name","store","createStore","applyMiddleware","next","maxId","getState","reduce","a","b","dispatch","thunkMiddleware","logger","checkEmptyString","replace","Navigation","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onWindowResize","window","innerWidth","setState","showToggleButton","showNavigationItems","toggleNavigation","onClickAddList","e","handleAddList","onKeyPressAddList","key","showInput","props","onAddList","addListInput","React","createRef","addEventListener","debounce","current","focus","removeEventListener","_this$props","onSetNewListTitle","react_default","createElement","className","onClick","value","onChange","onKeyPress","placeholder","ref","Component","connect","Date","addList","target","func","wait","immediate","timeout","context","args","callNow","clearTimeout","setTimeout","apply","List","_ref","onClickList","onEnterList","tabIndex","toLocaleDateString","slice","Lists","handleSelectList","onSetCurrentList","onSetCurrentItems","scrollToCurrentList","onRequestLists","onRequestItems","_this2","listComponents","itemsProp","forEach","components_List_List","setCurrentList","ListItem","onClickDelete","onKeyUp","AddItem","onSetNewItemName","onClickAddItem","onKeyPressAddItem","CurrentList","handleDeleteList","confirm","onDeleteList","onClickDeleteItem","stopPropagation","handleDeleteItem","onClickItem","handleToggleItem","onKeyPressItem","onDeleteItem","onSetListDate","onToggleItem","handleAddItem","onAddItem","react","components_ListItem_ListItem","components_AddItem_AddItem","setListDate","deleteList","deleteItem","toggleItem","addItem","App","scroll","scrollIntoView","behavior","block","inline","components_Navigation_Navigation","components_Lists_Lists","components_CurrentList_CurrentList","Boolean","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uTASMA,EAAoB,CACxBC,MAAO,GACPC,YAAa,KACbC,aAAc,ICFVC,EAAoB,CACxBC,MAAO,GACPC,aAAc,GACdC,YAAa,ICNTC,EAAcC,YAAgB,CAClCC,aFO0B,WAA4C,IAA3CC,EAA2CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnCZ,EAAmBe,EAAgBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC/D,OAAQG,EAAOC,MACb,IGjBuB,cHkBrB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBV,MAAOc,EAAOI,UACnC,IGlB4B,mBHmB1B,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBT,YAAaa,EAAOI,UACzC,IGnByB,gBHoBvB,IAAMlB,EAAQU,EAAMV,MAAMmB,IAAI,SAACC,GAC7B,OAAIA,EAAKC,KAAOP,EAAOI,QAAQI,OACtBN,OAAAC,EAAA,EAAAD,CAAA,GAAKI,EAASA,EAAKG,SAAWT,EAAOI,QAAQK,UAE9CH,IAEV,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBV,UACrB,IG1BuB,cH2BrB,OAAOgB,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEV,MAAOU,EAAMV,MAAMwB,OAAO,SAAAJ,GAAI,OAAIA,EAAKC,KAAOP,EAAOI,UACrDjB,YAAa,OAEjB,IG9B4B,mBH+B1B,IAAMwB,EAAU,CACdJ,GAAIP,EAAOI,QAAQQ,OACnBC,MAAOb,EAAOI,QAAQS,MACtBJ,SAAUT,EAAOI,QAAQK,UAE3B,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEV,MAAOU,EAAMV,MAAM4B,OAAOH,GAC1BxB,YAAawB,EACbvB,aAAc,KAElB,IGzC8B,qBH0C5B,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBR,aAAcY,EAAOI,UAC1C,QACE,OAAOR,IE1CGmB,aDQY,WAA4C,IAA3CnB,EAA2CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnCR,EAAmBW,EAAgBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC/D,OAAQG,EAAOC,MACb,IEVuB,cFWrB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBN,MAAOU,EAAOI,UACnC,IEX6B,oBFY3B,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEL,aAAcK,EAAMN,MAAMoB,OAAO,SAAAM,GAC/B,OAAOA,EAAKC,UAAYjB,EAAOI,YAGrC,IEjBuB,cFkBrB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEN,MAAOM,EAAMN,MAAMoB,OAAO,SAAAM,GAAI,OAAIA,EAAKT,KAAOP,EAAOI,UACrDb,aAAcK,EAAML,aAAamB,OAAO,SAAAM,GACtC,OAAOA,EAAKT,KAAOP,EAAOI,YAGhC,IExBuB,cFyBrB,IAAMd,EAAQM,EAAMN,MAAMe,IAAI,SAACW,GAC7B,OAAIA,EAAKT,KAAOP,EAAOI,QAAQc,OACtBF,EAEFd,OAAAC,EAAA,EAAAD,CAAA,GAAKc,EAASA,EAAKG,SAAWnB,EAAOI,QAAQe,WAEhD5B,EAAeK,EAAML,aAAac,IAAI,SAACW,GAC3C,OAAIA,EAAKT,KAAOP,EAAOI,QAAQc,OACtBF,EAEFd,OAAAC,EAAA,EAAAD,CAAA,GAAKc,EAASA,EAAKG,SAAWnB,EAAOI,QAAQe,WAEtD,OAAOjB,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBL,eAAcD,UACnC,IEpC4B,mBFqC1B,IAAM8B,EAAU,CACdH,QAASjB,EAAOI,QAAQI,OACxBD,GAAIP,EAAOI,QAAQQ,OACnBS,KAAMrB,EAAOI,QAAQiB,KACrBF,SAAS,GAEX,OAAOjB,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEN,MAAOM,EAAMN,MAAMwB,OAAOM,GAC1B7B,aAAcK,EAAML,aAAauB,OAAOM,GACxC5B,YAAa,KAEjB,IEhD6B,oBFiD3B,OAAOU,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBJ,YAAaQ,EAAOI,UACzC,IE3D4B,mBF4D1B,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBL,aAAc,KACnC,QACE,OAAOK,MCrDE0B,EAJDC,YACZ9B,EAAa+B,YEPwB,SAAAF,GAAK,OAAI,SAAAG,GAAI,OAAI,SAAAzB,GACtD,GDOsB,aCPlBA,EAAOC,KAAmB,CAC5B,IACMyB,EADQJ,EAAMK,WAAWZ,aAAazB,MACxBsC,OAAO,SAACC,EAAGC,GAAJ,OAAWD,EAAEtB,GAAKuB,EAAEvB,GAAMsB,EAAEtB,GAAKuB,EAAEvB,KAC9De,EAAMS,SAAS,CACb9B,KDI0B,mBCH1BG,QAAS,CACPI,OAAQR,EAAOI,QAAQI,OACvBa,KAAMrB,EAAOI,QAAQiB,KACrBT,OAAQc,EAAQ,KAItB,GDbsB,aCalB1B,EAAOC,KAAmB,CAC5B,IACMyB,EADQJ,EAAMK,WAAWhC,aAAaT,MACxB0C,OAAO,SAACC,EAAGC,GAAJ,OAAWD,EAAEtB,GAAKuB,EAAEvB,GAAMsB,EAAEtB,GAAKuB,EAAEvB,KAC9De,EAAMS,SAAS,CACb9B,KDhB0B,mBCiB1BG,QAAS,CACPS,MAAOb,EAAOI,QAAQS,MACtBD,OAAQc,EAAQ,EAChBjB,SAAUT,EAAOI,QAAQK,YAI/BgB,EAAKzB,MFlBiDgC,IAAiBC,sDGX5DC,EAAmB,SAACb,GAC/B,OAAKA,EAAKc,QAAQ,OAAQ,KCkBtBC,qBACJ,SAAAA,IAAc,IAAAC,EAAA,OAAAnC,OAAAoC,EAAA,EAAApC,CAAAqC,KAAAH,IACZC,EAAAnC,OAAAsC,EAAA,EAAAtC,CAAAqC,KAAArC,OAAAuC,EAAA,EAAAvC,CAAAkC,GAAAM,KAAAH,QAwBFI,eAAiB,WACXC,OAAOC,YAAc,IACvBR,EAAKS,SAAS,CACZC,kBAAkB,EAClBC,qBAAqB,IAGvBX,EAAKS,SAAS,CACZC,kBAAkB,KAjCVV,EAsCdY,iBAAmB,WACjBZ,EAAKS,SAAS,CAAEE,qBAAsBX,EAAKzC,MAAMoD,uBAvCrCX,EA4Cda,eAAiB,SAACrC,GAAD,OAAW,SAACsC,GAC3Bd,EAAKe,cAAcvC,KA7CPwB,EAgDdgB,kBAAoB,SAACxC,GAAD,OAAW,SAACsC,GAChB,UAAVA,EAAEG,KACJjB,EAAKe,cAAcvC,KAlDTwB,EAsDde,cAAgB,SAACvC,GACf,GAAIwB,EAAKzC,MAAM2D,UAAW,CACxB,GAAIrB,EAAiBrB,GAEnB,YADAwB,EAAKS,SAAS,CAAES,WAAW,IAG7BlB,EAAKmB,MAAMC,UAAU5C,GACrBwB,EAAKS,SAAS,CAAES,WAAW,SAE3BlB,EAAKS,SAAS,CAAES,WAAW,KA7D7BlB,EAAKqB,aAAeC,IAAMC,YAC1BvB,EAAKzC,MAAQ,CACXmD,kBAAkB,EAClBC,qBAAqB,EACrBO,WAAW,GANDlB,mFAWZO,OAAOiB,iBAAiB,SAAUC,EAASvB,KAAKI,eAAgB,MAChEJ,KAAKI,8DAIDJ,KAAK3C,MAAM2D,WAAahB,KAAK3C,MAAMoD,qBACrCT,KAAKmB,aAAaK,QAAQC,uDAK5BpB,OAAOqB,oBAAoB,SAAUH,EAASvB,KAAKI,eAAgB,uCA6C5D,IAAAuB,EACqC3B,KAAKiB,MAAzCpE,EADD8E,EACC9E,aAAc+E,EADfD,EACeC,kBAEtB,OACEC,EAAAvC,EAAAwC,cAAA,OAAKC,UAAU,sCACbF,EAAAvC,EAAAwC,cAAA,MAAIC,UAAU,wBAAd,SAEE/B,KAAK3C,MAAMoD,qBACToB,EAAAvC,EAAAwC,cAAA,OAAKC,UAAU,wBACbF,EAAAvC,EAAAwC,cAAA,UAAQpE,KAAK,SAASsE,QAAShC,KAAKW,eAAe9D,GACnDkF,UAAU,2FADV,YAKE/B,KAAK3C,MAAM2D,WACTa,EAAAvC,EAAAwC,cAAA,SACEpE,KAAK,OACLuE,MAAOpF,EACPqF,SAAUN,EACVO,WAAYnC,KAAKc,kBAAkBjE,GACnCuF,YAAY,aACZL,UAAU,iCACVM,IAAKrC,KAAKmB,gBAMpBnB,KAAK3C,MAAMmD,kBACTqB,EAAAvC,EAAAwC,cAAA,UAAQpE,KAAK,SAASsE,QAAShC,KAAKU,iBACpCqB,UAAU,mDACRF,EAAAvC,EAAAwC,cAAA,QAAMC,UAAU,QAChBF,EAAAvC,EAAAwC,cAAA,QAAMC,UAAU,QAChBF,EAAAvC,EAAAwC,cAAA,QAAMC,UAAU,iBArGLO,cA6GVC,cA1HS,SAAClF,GACvB,MAAO,CACLR,aAAcQ,EAAMD,aAAaP,eAIV,SAAC2C,GAC1B,MAAO,CACL0B,UAAW,SAAC5C,GAAD,OAAWkB,ECgCH,SAAClB,GAAD,MAAY,CACjCZ,KJ3CsB,WI4CtBG,QAAS,CAAES,QAAOJ,SAAU,IAAIsE,ODlCCC,CAAQnE,KACvCsD,kBAAmB,SAAChB,GAAD,OAAOpB,ECoCa,CACzC9B,KJ9CgC,qBI+ChCG,QDtCqD+C,EAAE8B,OAAOT,WAiHjDM,CAA6C1C,GAE5D,SAAS0B,EAASoB,EAAMC,EAAMC,GAC7B,IAAIC,EACJ,OAAO,WACJ,IAAIC,EAAU/C,KACVgD,EAAO1F,UAKT2F,EAAUJ,IAAcC,EAC5BI,aAAaJ,GACbA,EAAUK,WANE,WACXL,EAAU,KACLD,GAAWF,EAAKS,MAAML,EAASC,IAITJ,GACxBK,GAASN,EAAKS,MAAML,EAASC,cEzHpBK,EAlBF,SAAAC,GAA+C,IAA5CvF,EAA4CuF,EAA5CvF,KAAMhB,EAAsCuG,EAAtCvG,MAAOwG,EAA+BD,EAA/BC,YAAaC,EAAkBF,EAAlBE,YACzC,OACC3B,EAAAvC,EAAAwC,cAAA,OAAKC,UAAU,uDACf0B,SAAS,IAAIzB,QAASuB,EAAYxF,EAAMA,EAAKC,IAC7CmE,WAAYqB,EAAYzF,EAAMA,EAAKC,KAClC6D,EAAAvC,EAAAwC,cAAA,MAAIC,UAAU,yBAAyBhE,EAAKO,OAC5CuD,EAAAvC,EAAAwC,cAAA,SAAI/D,EAAKG,SAASwF,sBAClB7B,EAAAvC,EAAAwC,cAAA,KAAGC,UAAU,uBAEXhF,EAAM4G,MAAM,EAAG,GAAG7F,IAAI,SAACW,GACtB,OAAOoD,EAAAvC,EAAAwC,cAAA,QAAMf,IAAKtC,EAAKT,IAAhB,KAAuBS,EAAKK,KAA5B,UCUP8E,oNAOJL,YAAc,SAACxF,EAAME,GAAP,OAAkB,SAAC2C,GAC/Bd,EAAK+D,iBAAiB9F,EAAME,OAG9BuF,YAAc,SAACzF,EAAME,GAAP,OAAkB,SAAC2C,GACjB,UAAVA,EAAEG,KACJjB,EAAK+D,iBAAiB9F,EAAME,OAIhC4F,iBAAmB,SAAC9F,EAAME,GACxB6B,EAAKmB,MAAM6C,iBAAiB/F,GAC5B+B,EAAKmB,MAAM8C,kBAAkB9F,GAC7B6B,EAAKmB,MAAM+C,0GAlBXhE,KAAKiB,MAAMgD,iBACXjE,KAAKiB,MAAMiD,kDAoBJ,IAAAC,EAAAnE,KAAA2B,EACkB3B,KAAKiB,MAAtBtE,EADDgF,EACChF,MAAOI,EADR4E,EACQ5E,MACXqH,EAAiB,GACjBC,EAAY,GAoBhB,OAlBA1H,EAAM2H,QAAQ,SAACvG,GACbhB,EAAMuH,QAAQ,SAAC7F,GACTV,EAAKC,KAAOS,EAAKC,UACnB2F,EAAYA,EAAU9F,OAAOE,MAGjC2F,EAAiBA,EAAe7F,OAC9BsD,EAAAvC,EAAAwC,cAACyC,EAAD,CACExD,IAAKhD,EAAKC,GACVD,KAAMA,EACNhB,MAAOsH,EACPd,YAAaY,EAAKZ,YAClBC,YAAaW,EAAKX,eAGtBa,EAAY,KAIZxC,EAAAvC,EAAAwC,cAAA,OAAKC,UAAU,mCAEXqC,EAAe7G,OAAS,EACpB6G,EACAvC,EAAAvC,EAAAwC,cAAA,KAAGC,UAAU,WAAb,0BAnDMO,cA0DLC,cA1ES,SAAClF,GACvB,MAAO,CACLV,MAAOU,EAAMD,aAAaT,MAC1BI,MAAOM,EAAMmB,aAAazB,QAIH,SAACyC,GAC1B,MAAO,CACLyE,eAAgB,kBAAMzE,EFPQ,SAACA,GAmBjCA,EAAS,CAAE9B,KJ5Bc,cI4BKG,QAlBhB,CACZ,CACEG,GAAI,EACJM,MAAO,OACPJ,SAAU,IAAIsE,KAAK,eAErB,CACExE,GAAI,EACJM,MAAO,WACPJ,SAAU,IAAIsE,KAAK,eAErB,CACExE,GAAI,EACJM,MAAO,QACPJ,SAAU,IAAIsE,KAAK,qBEPrB0B,eAAgB,kBAAM1E,ECRQ,SAACA,GAkCjCA,EAAS,CAAE9B,KPnCc,cOmCKG,QAjChB,CACZ,CACEa,QAAS,EACTV,GAAI,EACJc,KAAM,QACNF,SAAS,GAEX,CACEF,QAAS,EACTV,GAAI,EACJc,KAAM,kBACNF,SAAS,GAEX,CACEF,QAAS,EACTV,GAAI,EACJc,KAAM,SACNF,SAAS,GAEX,CACEF,QAAS,EACTV,GAAI,EACJc,KAAM,YACNF,SAAS,GAEX,CACEF,QAAS,EACTV,GAAI,EACJc,KAAM,WACNF,SAAS,SDrBXkF,iBAAkB,SAAC/F,GAAD,OAAUyB,EFaF,SAACzB,GAAD,MAAW,CACvCL,KJ/B8B,mBIgC9BG,QAASE,GEf8ByG,CAAezG,KACpDgG,kBAAmB,SAAChH,GAAD,OAAWyC,EC2BU,CAC1C9B,KPtC+B,oBOuC/BG,QD7ByDd,OA8D5CwF,CAA6CqB,GE/D7Ca,EAhBE,SAAAnB,GAEX,IADJtF,EACIsF,EADJtF,GAAIC,EACAqF,EADArF,OAAQW,EACR0E,EADQ1E,QAASE,EACjBwE,EADiBxE,KAAMkD,EACvBsB,EADuBtB,QAAS0C,EAChCpB,EADgCoB,cAAevC,EAC/CmB,EAD+CnB,WAEnD,OACEN,EAAAvC,EAAAwC,cAAA,MAAIC,UAAW,qBAAuBnD,EAAU,WAAa,IAC7D6E,SAAS,IAAIkB,QAASxC,EAAWlE,EAAQD,EAAIY,GAC7CoD,QAASA,EAAQ/D,EAAQD,EAAIY,IAC1BE,EACD+C,EAAAvC,EAAAwC,cAAA,QAAMC,UAAU,QAAQzD,MAAM,cAC9B0D,QAAS0C,EAAczG,EAAQD,IAD/B,UCaS4G,EArBC,SAAAtB,GAEV,IADJrF,EACIqF,EADJrF,OAAQhB,EACJqG,EADIrG,YAAa4H,EACjBvB,EADiBuB,iBAAkBC,EACnCxB,EADmCwB,eAAgBC,EACnDzB,EADmDyB,kBAEvD,OACElD,EAAAvC,EAAAwC,cAAA,OAAKC,UAAU,OACbF,EAAAvC,EAAAwC,cAAA,SACEpE,KAAK,OACLuE,MAAOhF,EACPiF,SAAU2C,EACV1C,WAAY4C,EAAkB9G,EAAQhB,GACtCmF,YAAY,WACZL,UAAU,gBAEZF,EAAAvC,EAAAwC,cAAA,UAAQpE,KAAK,SAASsE,QAAS8C,EAAe7G,EAAQhB,GACtD8E,UAAU,gEADV,SCeAiD,oNAEJC,iBAAmB,SAAChH,GAAD,OAAY,SAAC2C,GAC1BP,OAAO6E,QAAQ,+CACjBpF,EAAKmB,MAAMkE,aAAalH,OAK5BmH,kBAAoB,SAACnH,EAAQU,GAAT,OAAoB,SAACiC,GACvCA,EAAEyE,kBACFvF,EAAKwF,iBAAiBrH,EAAQU,OAGhC4G,YAAc,SAACtH,EAAQU,EAAQC,GAAjB,OAA6B,SAACgC,GAC1Cd,EAAK0F,iBAAiBvH,EAAQU,EAAQC,OAGxC6G,eAAiB,SAACxH,EAAQU,EAAQC,GAAjB,OAA6B,SAACgC,GAC/B,WAAVA,EAAEG,IACJjB,EAAKwF,iBAAiBrH,EAAQU,GACX,UAAViC,EAAEG,KACXjB,EAAK0F,iBAAiBvH,EAAQU,EAAQC,OAI1C0G,iBAAmB,SAACrH,EAAQU,GACtB0B,OAAO6E,QAAQ,gDACjBpF,EAAKmB,MAAMyE,aAAa/G,GACxBmB,EAAKmB,MAAM0E,cAAc1H,OAI7BuH,iBAAmB,SAACvH,EAAQU,EAAQC,GAClCkB,EAAKmB,MAAM2E,aAAajH,EAAQC,GAChCkB,EAAKmB,MAAM0E,cAAc1H,MAI3B6G,eAAiB,SAAC7G,EAAQa,GAAT,OAAkB,SAAC8B,GAClCd,EAAK+F,cAAc5H,EAAQa,OAG7BiG,kBAAoB,SAAC9G,EAAQa,GAAT,OAAkB,SAAC8B,GACvB,UAAVA,EAAEG,KACJjB,EAAK+F,cAAc5H,EAAQa,OAI/B+G,cAAgB,SAAC5H,EAAQa,GACnBa,EAAiBb,KAGrBgB,EAAKmB,MAAM6E,UAAU7H,EAAQa,GAC7BgB,EAAKmB,MAAM0E,cAAc1H,6EAGlB,IAAAkG,EAAAnE,KAAA2B,EACgD3B,KAAKiB,MAApDlD,EADD4D,EACC5D,KAAMhB,EADP4E,EACO5E,MAAOE,EADd0E,EACc1E,YAAa4H,EAD3BlD,EAC2BkD,iBAClC,OAAK9G,EAGH8D,EAAAvC,EAAAwC,cAACiE,EAAA,SAAD,KACElE,EAAAvC,EAAAwC,cAAA,UAAQpE,KAAK,SAASsE,QAAShC,KAAKiF,iBAAiBlH,EAAKC,IAC1D+D,UAAU,4DADV,UAIAF,EAAAvC,EAAAwC,cAAA,MAAIC,UAAU,6BAA6BhE,EAAKO,OAChDuD,EAAAvC,EAAAwC,cAAA,SAAI/D,EAAKG,SAASwF,sBAClB7B,EAAAvC,EAAAwC,cAAA,UAEI/E,EAAMQ,OAAS,EACbR,EAAMe,IAAI,SAACW,GACT,OACEoD,EAAAvC,EAAAwC,cAACkE,EAAD,CACEjF,IAAKtC,EAAKT,GACVA,GAAIS,EAAKT,GACTC,OAAQF,EAAKC,GACbY,QAASH,EAAKG,QACdE,KAAML,EAAKK,KACXkD,QAASmC,EAAKoB,YACdb,cAAeP,EAAKiB,kBACpBjD,WAAYgC,EAAKsB,mBAKvB5D,EAAAvC,EAAAwC,cAAA,sBAGND,EAAAvC,EAAAwC,cAACmE,EAAD,CACEhI,OAAQF,EAAKC,GACbf,YAAaA,EACb4H,iBAAkBA,EAClBC,eAAgB9E,KAAK8E,eACrBC,kBAAmB/E,KAAK+E,qBApCZ,YA3DIzC,cAsGXC,cAzHS,SAAClF,GACvB,MAAO,CACLU,KAAMV,EAAMD,aAAaR,YACzBG,MAAOM,EAAMmB,aAAaxB,aAC1BC,YAAaI,EAAMmB,aAAavB,cAIT,SAACuC,GAC1B,MAAO,CACLmG,cAAe,SAAC1H,GAAD,OAAYuB,ENeJ,SAACvB,GAAD,MAAa,CACtCP,KJnC2B,gBIoC3BG,QAAS,CAAEI,SAAQC,SAAU,IAAIsE,OMjBK0D,CAAYjI,KAChDkH,aAAc,SAAClH,GAAD,OAAYuB,ENmBJ,SAACvB,GAAD,MAAa,CACrCP,KJvCyB,cIwCzBG,QAASI,GMrB4BkI,CAAWlI,KAC9CyH,aAAc,SAAC/G,GAAD,OAAYa,EH4BJ,SAACb,GAAD,MAAa,CACrCjB,KP1CyB,cO2CzBG,QAASc,GG9B4ByH,CAAWzH,KAC9CiH,aAAc,SAACjH,EAAQC,GAAT,OAAqBY,EHgCb,SAACb,EAAQC,GAAT,MAAsB,CAC9ClB,KP9CyB,cO+CzBG,QAAS,CAAEc,SAAQC,YGlC2ByH,CAAW1H,EAAQC,KAC/DkH,UAAW,SAAC7H,EAAQa,GAAT,OAAkBU,EHoCV,SAACvB,EAAQa,GAAT,MAAmB,CACxCpB,KPlDsB,WOmDtBG,QAAS,CAAEI,SAAQa,SGtCqBwH,CAAQrI,EAAQa,KACtD+F,iBAAkB,SAACjE,GAAD,OAAOpB,EHwCY,CACvC9B,KPrD+B,oBOsD/BG,QG1CmD+C,EAAE8B,OAAOT,WA0G/CM,CAA6CyC,GCxG7CuB,6MAtBbvC,oBAAsB,WAChB3D,OAAOC,WAAa,KACtBR,EAAK0G,OAAOC,eAAe,CACzBC,SAAU,SAAUC,MAAO,QAASC,OAAQ,qFAKzC,IAAAzC,EAAAnE,KACP,OACE6B,EAAAvC,EAAAwC,cAACiE,EAAA,SAAD,KACElE,EAAAvC,EAAAwC,cAAC+E,EAAD,MACAhF,EAAAvC,EAAAwC,cAACgF,EAAD,CAAO9C,oBAAqBhE,KAAKgE,sBACjCnC,EAAAvC,EAAAwC,cAAA,OAAKC,UAAU,sCACbF,EAAAvC,EAAAwC,cAAA,OAAKO,IAAK,SAACA,GAAD,OAAS8B,EAAKqC,OAASnE,KACjCR,EAAAvC,EAAAwC,cAACiF,EAAD,eAhBQzE,aCOE0E,QACW,cAA7B3G,OAAO4G,SAASC,UAEe,UAA7B7G,OAAO4G,SAASC,UAEhB7G,OAAO4G,SAASC,SAASC,MACvB,iECTNC,IAASC,OACPxF,EAAAvC,EAAAwC,cAACwF,EAAA,EAAD,CAAUvI,MAAOA,GAAO8C,EAAAvC,EAAAwC,cAACyF,EAAD,OACxBC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d4a175d1.chunk.js","sourcesContent":["import {\r\n  FETCH_LISTS,\r\n  SET_CURRENT_LIST,\r\n  SET_LIST_DATE,\r\n  DELETE_LIST,\r\n  ADD_LIST_WITH_ID,\r\n  SET_NEW_LIST_TITLE\r\n} from '../constants/action-types';\r\n\r\nconst initialStateLists = {\r\n  lists: [],\r\n  currentList: null,\r\n  newListTitle: ''\r\n};\r\n\r\nexport const listsReducer = (state = initialStateLists, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_LISTS:\r\n      return { ...state, lists: action.payload };\r\n    case SET_CURRENT_LIST:\r\n      return { ...state, currentList: action.payload };\r\n    case SET_LIST_DATE:\r\n      const lists = state.lists.map((list) => {\r\n        if (list.id === action.payload.listId) {\r\n          return { ...list, ...list.modified = action.payload.modified };\r\n        }\r\n        return  list;\r\n      });\r\n      return { ...state, lists };\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        lists: state.lists.filter(list => list.id !== action.payload),\r\n        currentList: null\r\n      };\r\n    case ADD_LIST_WITH_ID:\r\n      const newList = {\r\n        id: action.payload.nextId,\r\n        title: action.payload.title,\r\n        modified: action.payload.modified\r\n      };\r\n      return {\r\n        ...state,\r\n        lists: state.lists.concat(newList),\r\n        currentList: newList,\r\n        newListTitle: ''\r\n      }\r\n    case SET_NEW_LIST_TITLE:\r\n      return { ...state, newListTitle: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_ITEMS,\r\n  SET_CURRENT_ITEMS,\r\n  DELETE_ITEM,\r\n  TOGGLE_ITEM,\r\n  ADD_ITEM_WITH_ID,\r\n  SET_NEW_ITEM_NAME,\r\n  ADD_LIST_WITH_ID\r\n} from '../constants/action-types';\r\n\r\nconst initialStateItems = {\r\n  items: [],\r\n  currentItems: [],\r\n  newItemName: ''\r\n};\r\n\r\nexport const itemsReducer = (state = initialStateItems, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_ITEMS:\r\n      return { ...state, items: action.payload };\r\n    case SET_CURRENT_ITEMS:\r\n      return {\r\n        ...state,\r\n        currentItems: state.items.filter(item => {\r\n          return item.list_id === action.payload;\r\n        })\r\n      };\r\n    case DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item.id !== action.payload),\r\n        currentItems: state.currentItems.filter(item => {\r\n          return item.id !== action.payload;\r\n        })\r\n      };\r\n    case TOGGLE_ITEM:\r\n      const items = state.items.map((item) => {\r\n        if (item.id !== action.payload.itemId) {\r\n          return item;\r\n        }\r\n        return { ...item, ...item.checked = !action.payload.checked };\r\n      });\r\n      const currentItems = state.currentItems.map((item) => {\r\n        if (item.id !== action.payload.itemId) {\r\n          return item;\r\n        }\r\n        return { ...item, ...item.checked = !action.payload.checked };\r\n      });\r\n      return { ...state, currentItems, items };\r\n    case ADD_ITEM_WITH_ID:\r\n      const newItem = {\r\n        list_id: action.payload.listId,\r\n        id: action.payload.nextId,\r\n        name: action.payload.name,\r\n        checked: false\r\n      };\r\n      return {\r\n        ...state,\r\n        items: state.items.concat(newItem),\r\n        currentItems: state.currentItems.concat(newItem),\r\n        newItemName: ''\r\n      };\r\n    case SET_NEW_ITEM_NAME:\r\n      return { ...state, newItemName: action.payload };\r\n    case ADD_LIST_WITH_ID:\r\n      return { ...state, currentItems: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { logger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { listsReducer } from '../reducers/lists';\r\nimport { itemsReducer } from '../reducers/items';\r\nimport { addListOrItemMiddleware } from '../middleware/middleware';\r\n\r\nconst rootReducer = combineReducers({\r\n  listsReducer, itemsReducer\r\n});\r\nconst store = createStore(\r\n  rootReducer, applyMiddleware(addListOrItemMiddleware, thunkMiddleware, logger)\r\n);\r\n\r\nexport default store;\r\n","export const FETCH_LISTS = 'FETCH_LISTS';\r\nexport const SET_CURRENT_LIST = 'SET_CURRENT_LIST';\r\nexport const SET_LIST_DATE = 'SET_LIST_DATE';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const ADD_LIST_WITH_ID = 'ADD_LIST_WITH_ID';\r\nexport const SET_NEW_LIST_TITLE = 'SET_NEW_LIST_TITLE';\r\n\r\nexport const FETCH_ITEMS = 'FETCH_ITEMS';\r\nexport const SET_CURRENT_ITEMS = 'SET_CURRENT_ITEMS';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const TOGGLE_ITEM = 'TOGGLE_ITEM';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const ADD_ITEM_WITH_ID = 'ADD_ITEM_WITH_ID';\r\nexport const SET_NEW_ITEM_NAME = 'SET_NEW_ITEM_NAME';\r\n","import {\r\n  ADD_ITEM, ADD_ITEM_WITH_ID, ADD_LIST, ADD_LIST_WITH_ID\r\n} from '../constants/action-types';\r\n\r\nexport const addListOrItemMiddleware = store => next => action => {\r\n  if (action.type === ADD_ITEM) {\r\n    const items = store.getState().itemsReducer.items;\r\n    const maxId = items.reduce((a, b) => (a.id > b.id) ? a.id : b.id);\r\n    store.dispatch({\r\n      type: ADD_ITEM_WITH_ID,\r\n      payload: {\r\n        listId: action.payload.listId,\r\n        name: action.payload.name,\r\n        nextId: maxId + 1\r\n      }\r\n    });\r\n  }\r\n  if (action.type === ADD_LIST) {\r\n    const lists = store.getState().listsReducer.lists;\r\n    const maxId = lists.reduce((a, b) => (a.id > b.id) ? a.id : b.id);\r\n    store.dispatch({\r\n      type: ADD_LIST_WITH_ID,\r\n      payload: {\r\n        title: action.payload.title,\r\n        nextId: maxId + 1,\r\n        modified: action.payload.modified\r\n      }\r\n    })\r\n  }\r\n  next(action);\r\n}\r\n","export const checkEmptyString = (name) => {\r\n  if (!name.replace(/\\s+/g, '')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setNewListTitle, addList } from '../../actions/lists';\r\nimport { checkEmptyString } from '../../helpers';\r\nimport './Navigation.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    newListTitle: state.listsReducer.newListTitle\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddList: (title) => dispatch(addList(title)),\r\n    onSetNewListTitle: (e) => dispatch(setNewListTitle(e.target.value))\r\n  };\r\n}\r\n\r\nclass Navigation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.addListInput = React.createRef();\r\n    this.state = {\r\n      showToggleButton: true,\r\n      showNavigationItems: false,\r\n      showInput: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', debounce(this.onWindowResize, 250));\r\n    this.onWindowResize();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.showInput && this.state.showNavigationItems) {\r\n      this.addListInput.current.focus();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', debounce(this.onWindowResize, 250));\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    if (window.innerWidth >= 480) {\r\n      this.setState({\r\n        showToggleButton: false,\r\n        showNavigationItems: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showToggleButton: true\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleNavigation = () => {\r\n    this.setState({ showNavigationItems: !this.state.showNavigationItems });\r\n  }\r\n\r\n  /* handle adding a list */\r\n\r\n  onClickAddList = (title) => (e) => {\r\n    this.handleAddList(title);\r\n  }\r\n\r\n  onKeyPressAddList = (title) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleAddList(title);\r\n    }\r\n  }\r\n\r\n  handleAddList = (title) => {\r\n    if (this.state.showInput) {\r\n      if (checkEmptyString(title)) {\r\n        this.setState({ showInput: false });\r\n        return;\r\n      }\r\n      this.props.onAddList(title);\r\n      this.setState({ showInput: false });\r\n    } else {\r\n      this.setState({ showInput: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { newListTitle, onSetNewListTitle } = this.props;\r\n\r\n    return (\r\n      <nav className=\"flex bg-yellow shadow-2 mb2 navbar\">\r\n        <h1 className=\"f2 pa3 mv0 menu-item\">Lists</h1>\r\n        {\r\n          this.state.showNavigationItems &&\r\n            <div className=\"menu-item mh2 mh0-ns\">\r\n              <button type=\"button\" onClick={this.onClickAddList(newListTitle)}\r\n              className=\"white b--none ph3 ph4-ns pv3 b pointer bg-green hover-bg-dark-green mv3 add-list-button\">\r\n                Add list\r\n              </button>\r\n              {\r\n                this.state.showInput &&\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newListTitle}\r\n                    onChange={onSetNewListTitle}\r\n                    onKeyPress={this.onKeyPressAddList(newListTitle)}\r\n                    placeholder=\"List title\"\r\n                    className=\"pa3 b--none mv3 add-list-input\"\r\n                    ref={this.addListInput}\r\n                  />\r\n              }\r\n            </div>\r\n        }\r\n        {\r\n          this.state.showToggleButton &&\r\n            <button type=\"button\" onClick={this.toggleNavigation}\r\n            className=\"b--none pa3 ma3 pointer absolute right-0 toggle\">\r\n              <span className=\"bar\"></span>\r\n              <span className=\"bar\"></span>\r\n              <span className=\"bar\"></span>\r\n            </button>\r\n        }\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n\r\nfunction debounce(func, wait, immediate) {\r\n\tlet timeout;\r\n\treturn function() {\r\n    let context = this;\r\n    let args = arguments;\r\n\t\tlet later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tlet callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t}\r\n}\r\n","import {\r\n  FETCH_LISTS,\r\n  SET_CURRENT_LIST,\r\n  SET_LIST_DATE,\r\n  DELETE_LIST,\r\n  ADD_LIST,\r\n  SET_NEW_LIST_TITLE\r\n} from '../constants/action-types';\r\n\r\nexport const requestLists = () => (dispatch) => {\r\n  const lists = [\r\n    {\r\n      id: 1,\r\n      title: 'Food',\r\n      modified: new Date('2018-08-20')\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Presents',\r\n      modified: new Date('2017-12-01')\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Other',\r\n      modified: new Date('2018-11-02')\r\n    }\r\n  ];\r\n\r\n  dispatch({ type: FETCH_LISTS, payload: lists });\r\n}\r\n\r\nexport const setCurrentList = (list) => ({\r\n  type: SET_CURRENT_LIST,\r\n  payload: list\r\n});\r\n\r\nexport const setListDate = (listId) => ({\r\n  type: SET_LIST_DATE,\r\n  payload: { listId, modified: new Date() }\r\n});\r\n\r\nexport const deleteList = (listId) => ({\r\n  type: DELETE_LIST,\r\n  payload: listId\r\n});\r\n\r\nexport const addList = (title) => ({\r\n  type: ADD_LIST,\r\n  payload: { title, modified: new Date() }\r\n});\r\n\r\nexport const setNewListTitle = (title) => ({\r\n  type: SET_NEW_LIST_TITLE,\r\n  payload: title\r\n});\r\n","import React from 'react';\r\nimport './List.css';\r\n\r\nconst List = ({ list, items, onClickList, onEnterList }) => {\r\n\treturn (\r\n\t\t<div className=\"pa2 ma2 mt1 bg-yellow pointer shadow-3 noselect list\"\r\n\t\ttabIndex=\"0\" onClick={onClickList(list, list.id)}\r\n\t\tonKeyPress={onEnterList(list, list.id)}>\r\n\t\t\t<h3 className=\"f3-l f4-m f5 truncate\">{list.title}</h3>\r\n\t\t\t<p>{list.modified.toLocaleDateString()}</p>\r\n\t\t\t<p className=\"list-items truncate\">\r\n\t\t\t\t{\r\n\t\t\t\t\titems.slice(0, 5).map((item) => {\r\n\t\t\t\t\t\treturn <span key={item.id}>- {item.name} </span>;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport List from '../List/List';\r\nimport './Lists.css';\r\nimport { requestLists, setCurrentList } from '../../actions/lists';\r\nimport { requestItems, setCurrentItems } from '../../actions/items';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    lists: state.listsReducer.lists,\r\n    items: state.itemsReducer.items\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRequestLists: () => dispatch(requestLists()),\r\n    onRequestItems: () => dispatch(requestItems()),\r\n    onSetCurrentList: (list) => dispatch(setCurrentList(list)),\r\n    onSetCurrentItems: (items) => dispatch(setCurrentItems(items))\r\n  }\r\n}\r\n\r\nclass Lists extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestLists();\r\n    this.props.onRequestItems();\r\n  }\r\n\r\n  /* handle selecting a list */\r\n  onClickList = (list, listId) => (e) => {\r\n    this.handleSelectList(list, listId);\r\n  }\r\n\r\n  onEnterList = (list, listId) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleSelectList(list, listId);\r\n    }\r\n  }\r\n\r\n  handleSelectList = (list, listId) => {\r\n    this.props.onSetCurrentList(list);\r\n    this.props.onSetCurrentItems(listId);\r\n    this.props.scrollToCurrentList();\r\n  }\r\n\r\n  render() {\r\n    const { lists, items } = this.props;\r\n    let listComponents = [];\r\n    let itemsProp = [];\r\n\r\n    lists.forEach((list) => {\r\n      items.forEach((item) => {\r\n        if (list.id === item.list_id) {\r\n          itemsProp = itemsProp.concat(item);\r\n        }\r\n      });\r\n      listComponents = listComponents.concat(\r\n        <List\r\n          key={list.id}\r\n          list={list}\r\n          items={itemsProp}\r\n          onClickList={this.onClickList}\r\n          onEnterList={this.onEnterList}\r\n        />\r\n      );\r\n      itemsProp = [];\r\n    });\r\n\r\n    return (\r\n      <div className=\"fl w-25-l w-third-m w-100 lists\">\r\n        {\r\n          listComponents.length > 0\r\n            ? listComponents\r\n            : <p className=\"message\">No lists found</p>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Lists);\r\n","import {\r\n  FETCH_ITEMS,\r\n  SET_CURRENT_ITEMS,\r\n  DELETE_ITEM,\r\n  TOGGLE_ITEM,\r\n  ADD_ITEM,\r\n  SET_NEW_ITEM_NAME\r\n} from '../constants/action-types';\r\n\r\nexport const requestItems = () => (dispatch) => {\r\n  const items = [\r\n    {\r\n      list_id: 1,\r\n      id: 1,\r\n      name: 'Bread',\r\n      checked: false\r\n    },\r\n    {\r\n      list_id: 1,\r\n      id: 2,\r\n      name: 'Sunflower seeds',\r\n      checked: true\r\n    },\r\n    {\r\n      list_id: 1,\r\n      id: 3,\r\n      name: 'Apples',\r\n      checked: false\r\n    },\r\n    {\r\n      list_id: 2,\r\n      id: 4,\r\n      name: 'Gaming PC',\r\n      checked: true\r\n    },\r\n    {\r\n      list_id: 2,\r\n      id: 5,\r\n      name: 'PC games',\r\n      checked: true\r\n    }\r\n  ];\r\n\r\n  dispatch({ type: FETCH_ITEMS, payload: items });\r\n}\r\n\r\nexport const setCurrentItems = (listId) => ({\r\n  type: SET_CURRENT_ITEMS,\r\n  payload: listId\r\n});\r\n\r\nexport const deleteItem = (itemId) => ({\r\n  type: DELETE_ITEM,\r\n  payload: itemId\r\n});\r\n\r\nexport const toggleItem = (itemId, checked) => ({\r\n  type: TOGGLE_ITEM,\r\n  payload: { itemId, checked }\r\n});\r\n\r\nexport const addItem = (listId, name) => ({\r\n  type: ADD_ITEM,\r\n  payload: { listId, name }\r\n});\r\n\r\nexport const setNewItemName = (text) => ({\r\n  type: SET_NEW_ITEM_NAME,\r\n  payload: text\r\n});\r\n","import React from 'react';\r\n\r\nconst ListItem = ({\r\n  id, listId, checked, name, onClick, onClickDelete, onKeyPress\r\n}) => {\r\n  return (\r\n    <li className={\"truncate noselect\" + (checked ? ' checked' : '')}\r\n    tabIndex=\"0\" onKeyUp={onKeyPress(listId, id, checked)}\r\n    onClick={onClick(listId, id, checked)}>\r\n      {name}\r\n      <span className=\"close\" title=\"Delete item\"\r\n      onClick={onClickDelete(listId, id)}>\r\n        &times;\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\n\r\nconst AddItem = ({\r\n  listId, newItemName, onSetNewItemName, onClickAddItem, onKeyPressAddItem\r\n}) => {\r\n  return (\r\n    <div className=\"mt3\">\r\n      <input\r\n        type=\"text\"\r\n        value={newItemName}\r\n        onChange={onSetNewItemName}\r\n        onKeyPress={onKeyPressAddItem(listId, newItemName)}\r\n        placeholder=\"Add item\"\r\n        className=\"pa3 b--none\"\r\n      />\r\n      <button type=\"button\" onClick={onClickAddItem(listId, newItemName)}\r\n      className=\"white b--none ph4 pv3 b pointer bg-green hover-bg-dark-green\">\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddItem;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setListDate, deleteList } from '../../actions/lists';\r\nimport {\r\n  deleteItem, toggleItem, addItem, setNewItemName\r\n} from '../../actions/items';\r\nimport { checkEmptyString } from '../../helpers';\r\nimport ListItem from '../ListItem/ListItem';\r\nimport AddItem from '../AddItem/AddItem';\r\nimport './CurrentList.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.listsReducer.currentList,\r\n    items: state.itemsReducer.currentItems,\r\n    newItemName: state.itemsReducer.newItemName\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSetListDate: (listId) => dispatch(setListDate(listId)),\r\n    onDeleteList: (listId) => dispatch(deleteList(listId)),\r\n    onDeleteItem: (itemId) => dispatch(deleteItem(itemId)),\r\n    onToggleItem: (itemId, checked) => dispatch(toggleItem(itemId, checked)),\r\n    onAddItem: (listId, name) => dispatch(addItem(listId, name)),\r\n    onSetNewItemName: (e) => dispatch(setNewItemName(e.target.value))\r\n  }\r\n}\r\n\r\nclass CurrentList extends Component {\r\n  /* handle deleting a list */\r\n  handleDeleteList = (listId) => (e) => {\r\n    if (window.confirm('Are you sure you want to delete this list?')) {\r\n      this.props.onDeleteList(listId);\r\n    }\r\n  }\r\n\r\n  /* handle toggling an item and deleting an item */\r\n  onClickDeleteItem = (listId, itemId) => (e) => {\r\n    e.stopPropagation();\r\n    this.handleDeleteItem(listId, itemId);\r\n  }\r\n\r\n  onClickItem = (listId, itemId, checked) => (e) => {\r\n    this.handleToggleItem(listId, itemId, checked);\r\n  }\r\n\r\n  onKeyPressItem = (listId, itemId, checked) => (e) => {\r\n    if (e.key === 'Delete') {\r\n      this.handleDeleteItem(listId, itemId);\r\n    } else if (e.key === 'Enter') {\r\n      this.handleToggleItem(listId, itemId, checked);\r\n    }\r\n  }\r\n\r\n  handleDeleteItem = (listId, itemId) => {\r\n    if (window.confirm('Are you sure you want to delete this item?')) {\r\n      this.props.onDeleteItem(itemId);\r\n      this.props.onSetListDate(listId);\r\n    }\r\n  }\r\n\r\n  handleToggleItem = (listId, itemId, checked) => {\r\n    this.props.onToggleItem(itemId, checked);\r\n    this.props.onSetListDate(listId);\r\n  }\r\n\r\n  /* handle adding an item */\r\n  onClickAddItem = (listId, name) => (e) => {\r\n    this.handleAddItem(listId, name);\r\n  }\r\n\r\n  onKeyPressAddItem = (listId, name) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleAddItem(listId, name);\r\n    }\r\n  }\r\n\r\n  handleAddItem = (listId, name) => {\r\n    if (checkEmptyString(name)) {\r\n      return;\r\n    }\r\n    this.props.onAddItem(listId, name);\r\n    this.props.onSetListDate(listId);\r\n  }\r\n\r\n  render() {\r\n    const { list, items, newItemName, onSetNewItemName } = this.props;\r\n    if (!list) return null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <button type=\"button\" onClick={this.handleDeleteList(list.id)}\r\n        className=\"white b--none ph4 pv3 b pointer bg-red hover-bg-dark-red\">\r\n          Delete\r\n        </button>\r\n        <h2 className=\"f2-l f3-m f4 mv4 truncate\">{list.title}</h2>\r\n        <p>{list.modified.toLocaleDateString()}</p>\r\n        <ul>\r\n          {\r\n            items.length > 0 ?\r\n              items.map((item) => {\r\n                return (\r\n                  <ListItem\r\n                    key={item.id}\r\n                    id={item.id}\r\n                    listId={list.id}\r\n                    checked={item.checked}\r\n                    name={item.name}\r\n                    onClick={this.onClickItem}\r\n                    onClickDelete={this.onClickDeleteItem}\r\n                    onKeyPress={this.onKeyPressItem}\r\n                  />\r\n                );\r\n              })\r\n            :\r\n              <p>No items</p>\r\n          }\r\n        </ul>\r\n        <AddItem\r\n          listId={list.id}\r\n          newItemName={newItemName}\r\n          onSetNewItemName={onSetNewItemName}\r\n          onClickAddItem={this.onClickAddItem}\r\n          onKeyPressAddItem={this.onKeyPressAddItem}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentList);\r\n","import React, { Component, Fragment } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Lists from './components/Lists/Lists';\nimport CurrentList from './components/CurrentList/CurrentList';\n\nclass App extends Component {\n  scrollToCurrentList = () => {\n    if (window.innerWidth < 480) {\n      this.scroll.scrollIntoView({\n        behavior: 'smooth', block: 'start', inline: 'nearest'\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Navigation />\n        <Lists scrollToCurrentList={this.scrollToCurrentList} />\n        <div className=\"fl w-75-l w-two-thirds-m w-100 pa3\">\n          <div ref={(ref) => this.scroll = ref} />\n          <CurrentList />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}