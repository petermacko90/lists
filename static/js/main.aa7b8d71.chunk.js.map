{"version":3,"sources":["reducers/lists.js","reducers/items.js","localStorage.js","helpers.js","store/store.js","constants/action-types.js","middleware/middleware.js","components/Navigation/Navigation.js","actions/lists.js","components/List/List.js","components/Lists/Lists.js","actions/items.js","components/ListItem/ListItem.js","components/AddItem/AddItem.js","components/CurrentList/CurrentList.js","App.js","serviceWorker.js","index.js"],"names":["initialStateLists","lists","currentList","initialState","items","currentItems","loadState","serializedState","localStorage","getItem","JSON","parse","key","value","Date","err","checkEmptyString","name","replace","debounce","func","wait","immediate","timeout","context","this","args","arguments","callNow","clearTimeout","setTimeout","apply","persistedState","rootReducer","combineReducers","listsReducer","state","length","undefined","action","type","Object","objectSpread","payload","map","list","id","filter","newList","nextId","title","modified","concat","itemsReducer","item","list_id","itemId","checked","newItem","listId","store","createStore","applyMiddleware","next","maxId","getState","reduce","a","b","dispatch","thunkMiddleware","logger","subscribe","stringify","setItem","console","log","saveState","Navigation","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClickAddList","handleAddList","onKeyPressAddList","e","props","isShowAddListInput","hideAddListInput","scrollToCurrentList","onAddList","setState","newListTitle","showAddListInput","onChangeNewListTitle","target","react_default","createElement","className","isShowNavItems","onClick","onChange","onKeyPress","placeholder","isShowToggleButton","toggleNavigation","aria-label","Component","connect","addList","List","_ref","onClickList","onEnterList","tabIndex","toLocaleDateString","slice","Lists","handleSelectList","onSetCurrentList","onSetCurrentItems","onRequestLists","onRequestItems","_this2","_this$props","show","listComponents","itemsProp","forEach","components_List_List","setCurrentList","ListItem","onClickDelete","onKeyUp","AddItem","newItemName","onSetNewItemName","onClickAddItem","onKeyPressAddItem","CurrentList","focusEditTitle","editTitle","current","focus","hideEditTitle","isEditTitle","showEditTitle","onChangeListTitle","onClickEditTitle","handleEditTitle","onKeyPressEditTitle","onEditList","handleDeleteList","window","confirm","onDeleteList","showLists","onClickDeleteItem","stopPropagation","handleDeleteItem","onClickItem","handleToggleItem","onKeyPressItem","onDeleteItem","onToggleItem","handleAddItem","onAddItem","onChangeNewItemName","React","createRef","_this$state","react","ref","style","minHeight","components_ListItem_ListItem","components_AddItem_AddItem","editList","deleteList","deleteItem","toggleItem","addItem","App","onWindowResize","windowWidth","innerWidth","isShowLists","hideNavItems","hideLists","addEventListener","components_Navigation_Navigation","components_Lists_Lists","components_CurrentList_CurrentList","href","rel","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.aa7b8d71.chunk.js","sourcesContent":["import {\r\n  FETCH_LISTS, SET_CURRENT_LIST, EDIT_LIST, DELETE_LIST, ADD_LIST_WITH_ID\r\n} from '../constants/action-types';\r\n\r\nconst initialStateLists = {\r\n  lists: [],\r\n  currentList: null\r\n};\r\n\r\nexport const listsReducer = (state = initialStateLists, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_LISTS:\r\n      return { ...state, lists: action.payload };\r\n    case SET_CURRENT_LIST:\r\n      return { ...state, currentList: action.payload };\r\n    case EDIT_LIST:\r\n      const lists = state.lists.map((list) => {\r\n        if (list.id === action.payload.id) {\r\n          return { ...list, ...action.payload };\r\n        }\r\n        return list;\r\n      });\r\n      return {\r\n        ...state,\r\n        lists,\r\n        currentList: { ...state.currentList, ...action.payload }\r\n      };\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        lists: state.lists.filter(list => list.id !== action.payload),\r\n        currentList: null\r\n      };\r\n    case ADD_LIST_WITH_ID:\r\n      const newList = {\r\n        id: action.payload.nextId,\r\n        title: action.payload.title,\r\n        modified: action.payload.modified\r\n      };\r\n      return {\r\n        ...state,\r\n        lists: state.lists.concat(newList),\r\n        currentList: newList\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_ITEMS,\r\n  SET_CURRENT_ITEMS,\r\n  DELETE_ITEM,\r\n  TOGGLE_ITEM,\r\n  ADD_ITEM_WITH_ID,\r\n  ADD_LIST_WITH_ID,\r\n  DELETE_LIST\r\n} from '../constants/action-types';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  currentItems: []\r\n};\r\n\r\nexport const itemsReducer = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_ITEMS:\r\n      return { ...state, items: action.payload };\r\n    case SET_CURRENT_ITEMS:\r\n      return {\r\n        ...state,\r\n        currentItems: state.items.filter(item => {\r\n          return item.list_id === action.payload;\r\n        })\r\n      };\r\n    case DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item.id !== action.payload),\r\n        currentItems: state.currentItems.filter(item => {\r\n          return item.id !== action.payload;\r\n        })\r\n      };\r\n    case TOGGLE_ITEM:\r\n      const items = state.items.map((item) => {\r\n        if (item.id !== action.payload.itemId) {\r\n          return item;\r\n        }\r\n        return { ...item, ...item.checked = !action.payload.checked };\r\n      });\r\n      const currentItems = state.currentItems.map((item) => {\r\n        if (item.id !== action.payload.itemId) {\r\n          return item;\r\n        }\r\n        return { ...item, ...item.checked = !action.payload.checked };\r\n      });\r\n      return { ...state, currentItems, items };\r\n    case ADD_ITEM_WITH_ID:\r\n      const newItem = {\r\n        list_id: action.payload.listId,\r\n        id: action.payload.nextId,\r\n        name: action.payload.name,\r\n        checked: false\r\n      };\r\n      return {\r\n        ...state,\r\n        items: state.items.concat(newItem),\r\n        currentItems: state.currentItems.concat(newItem)\r\n      };\r\n    case ADD_LIST_WITH_ID:\r\n      return { ...state, currentItems: [] };\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => {\r\n          return item.list_id !== action.payload\r\n        }),\r\n        currentItems: state.currentItems.filter(item => {\r\n          return item.list_id !== action.payload\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState, (key, value) => {\r\n      if (key === 'modified') {\r\n        return new Date(value);\r\n      } else {\r\n        return value;\r\n      }\r\n    });\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.log('localStorage saveState error: ' + err);\r\n  }\r\n}\r\n","export const checkEmptyString = (name) => {\r\n  if (!name.replace(/\\s+/g, '')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function debounce(func, wait, immediate) {\r\n\tlet timeout;\r\n\treturn function() {\r\n    let context = this;\r\n    let args = arguments;\r\n\t\tlet later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tlet callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t}\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { logger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { listsReducer } from '../reducers/lists';\r\nimport { itemsReducer } from '../reducers/items';\r\nimport { addListOrItemMiddleware } from '../middleware/middleware';\r\nimport { loadState, saveState } from '../localStorage';\r\nimport { debounce } from '../helpers';\r\n\r\nconst persistedState = loadState();\r\nconst rootReducer = combineReducers({ listsReducer, itemsReducer });\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  applyMiddleware(addListOrItemMiddleware, thunkMiddleware, logger)\r\n);\r\n\r\nstore.subscribe(\r\n  debounce(() => {\r\n    saveState({\r\n      listsReducer: { lists: store.getState().listsReducer.lists },\r\n      itemsReducer: { items: store.getState().itemsReducer.items }\r\n    });\r\n  }, 1000)\r\n);\r\n\r\nexport default store;\r\n","export const FETCH_LISTS = 'FETCH_LISTS';\r\nexport const SET_CURRENT_LIST = 'SET_CURRENT_LIST';\r\nexport const EDIT_LIST = 'EDIT_LIST';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const ADD_LIST_WITH_ID = 'ADD_LIST_WITH_ID';\r\n\r\nexport const FETCH_ITEMS = 'FETCH_ITEMS';\r\nexport const SET_CURRENT_ITEMS = 'SET_CURRENT_ITEMS';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const TOGGLE_ITEM = 'TOGGLE_ITEM';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const ADD_ITEM_WITH_ID = 'ADD_ITEM_WITH_ID';\r\n","import {\r\n  ADD_ITEM, ADD_ITEM_WITH_ID, ADD_LIST, ADD_LIST_WITH_ID\r\n} from '../constants/action-types';\r\n\r\nexport const addListOrItemMiddleware = store => next => action => {\r\n  if (action.type === ADD_ITEM) {\r\n    const items = store.getState().itemsReducer.items;\r\n    const maxId = items.reduce((a, b) => {\r\n      return (a.id > b.id) ? a.id : b.id;\r\n    }, 0);\r\n    store.dispatch({\r\n      type: ADD_ITEM_WITH_ID,\r\n      payload: {\r\n        listId: action.payload.listId,\r\n        name: action.payload.name,\r\n        nextId: maxId + 1\r\n      }\r\n    });\r\n  }\r\n  if (action.type === ADD_LIST) {\r\n    const lists = store.getState().listsReducer.lists;\r\n    const maxId = lists.reduce((a, b) => {\r\n      return (a.id > b.id) ? a.id : b.id;\r\n    }, 0);\r\n    store.dispatch({\r\n      type: ADD_LIST_WITH_ID,\r\n      payload: {\r\n        title: action.payload.title,\r\n        nextId: maxId + 1,\r\n        modified: action.payload.modified\r\n      }\r\n    })\r\n  }\r\n  next(action);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addList } from '../../actions/lists';\r\nimport { checkEmptyString } from '../../helpers';\r\nimport './Navigation.css';\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddList: (title) => dispatch(addList(title))\r\n  };\r\n}\r\n\r\nclass Navigation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      newListTitle: ''\r\n    };\r\n  }\r\n\r\n  /* handle adding a list */\r\n\r\n  onClickAddList = (title) => () => {\r\n    this.handleAddList(title);\r\n  }\r\n\r\n  onKeyPressAddList = (title) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleAddList(title);\r\n    }\r\n  }\r\n\r\n  handleAddList = (title) => {\r\n    if (this.props.isShowAddListInput) {\r\n      if (checkEmptyString(title)) {\r\n        this.props.hideAddListInput();\r\n        return;\r\n      }\r\n      this.props.scrollToCurrentList();\r\n      this.props.onAddList(title);\r\n      this.setState({ newListTitle: '' });\r\n    } else {\r\n      this.props.showAddListInput();\r\n    }\r\n  }\r\n\r\n  onChangeNewListTitle = (e) => {\r\n    this.setState({ newListTitle: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { newListTitle } = this.state;\r\n\r\n    return (\r\n      <nav className=\"flex flex-column flex-row-ns bg-yellow shadow-2 mb2\">\r\n        <h1 className=\"flex-column flex-row-ns f2 pa3 mv0\">Lists</h1>\r\n        {\r\n          this.props.isShowNavItems &&\r\n            <div className=\"flex-column flex-row-ns mh3 mh0-ns\">\r\n              <button type=\"button\" onClick={this.onClickAddList(newListTitle)}\r\n              className=\"white b--none ph3 ph4-ns pv3 b pointer bg-green hover-bg-dark-green mv3 w-40 w-auto-ns\">\r\n                Add list\r\n              </button>\r\n              {\r\n                this.props.isShowAddListInput &&\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newListTitle}\r\n                    onChange={this.onChangeNewListTitle}\r\n                    onKeyPress={this.onKeyPressAddList(newListTitle)}\r\n                    placeholder=\"List title\"\r\n                    className=\"pa3 b--none mv3 w-60 w-auto-ns\"\r\n                  />\r\n              }\r\n            </div>\r\n        }\r\n        {\r\n          this.props.isShowToggleButton &&\r\n            <button type=\"button\" onClick={this.props.toggleNavigation}\r\n            className=\"b--none pa3 ma3 pointer absolute right-0 toggle bg-transparent hover-bg-light-yellow\"\r\n            aria-label=\"Toggle navigation\">\r\n              <span className=\"bar db bg-black\"></span>\r\n              <span className=\"bar db bg-black\"></span>\r\n              <span className=\"bar db bg-black\"></span>\r\n            </button>\r\n        }\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Navigation);\r\n","import {\r\n  FETCH_LISTS, SET_CURRENT_LIST, EDIT_LIST, DELETE_LIST, ADD_LIST\r\n} from '../constants/action-types';\r\nimport { loadState } from '../localStorage';\r\n\r\nexport const requestLists = () => (dispatch) => {\r\n  const lists = loadState() === undefined ? [] : loadState().listsReducer.lists;\r\n  dispatch({ type: FETCH_LISTS, payload: lists });\r\n}\r\n\r\nexport const setCurrentList = (list) => ({\r\n  type: SET_CURRENT_LIST,\r\n  payload: list\r\n});\r\n\r\nexport const editList = (id, title, modified) => ({\r\n  type: EDIT_LIST,\r\n  payload: { id, title, modified }\r\n});\r\n\r\nexport const deleteList = (listId) => ({\r\n  type: DELETE_LIST,\r\n  payload: listId\r\n});\r\n\r\nexport const addList = (title) => ({\r\n  type: ADD_LIST,\r\n  payload: { title, modified: new Date() }\r\n});\r\n","import React from 'react';\r\nimport './List.css';\r\n\r\nconst List = ({ list, items, onClickList, onEnterList }) => {\r\n\treturn (\r\n\t\t<div className=\"pa2 ma2 mt1 bg-yellow pointer shadow-3 noselect list\"\r\n\t\ttabIndex=\"0\" onClick={onClickList(list, list.id)}\r\n\t\tonKeyPress={onEnterList(list, list.id)}>\r\n\t\t\t<h3 className=\"f3-l f4-m f5 truncate\">{list.title}</h3>\r\n\t\t\t<p>{list.modified.toLocaleDateString()}</p>\r\n\t\t\t<p className=\"list-items truncate\">\r\n\t\t\t\t{\r\n\t\t\t\t\titems.slice(0, 5).map((item) => {\r\n\t\t\t\t\t\treturn <span key={item.id}>- {item.name} </span>;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport List from '../List/List';\r\nimport './Lists.css';\r\nimport { requestLists, setCurrentList } from '../../actions/lists';\r\nimport { requestItems, setCurrentItems } from '../../actions/items';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    lists: state.listsReducer.lists,\r\n    items: state.itemsReducer.items\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRequestLists: () => dispatch(requestLists()),\r\n    onRequestItems: () => dispatch(requestItems()),\r\n    onSetCurrentList: (list) => dispatch(setCurrentList(list)),\r\n    onSetCurrentItems: (items) => dispatch(setCurrentItems(items))\r\n  }\r\n}\r\n\r\nclass Lists extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestLists();\r\n    this.props.onRequestItems();\r\n  }\r\n\r\n  /* handle selecting a list */\r\n  onClickList = (list, listId) => () => {\r\n    this.handleSelectList(list, listId);\r\n  }\r\n\r\n  onEnterList = (list, listId) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleSelectList(list, listId);\r\n    }\r\n  }\r\n\r\n  handleSelectList = (list, listId) => {\r\n    this.props.onSetCurrentList(list);\r\n    this.props.onSetCurrentItems(listId);\r\n    this.props.scrollToCurrentList();\r\n  }\r\n\r\n  render() {\r\n    const { lists, items, show } = this.props;\r\n    let listComponents = [];\r\n    let itemsProp = [];\r\n\r\n    lists.forEach((list) => {\r\n      items.forEach((item) => {\r\n        if (list.id === item.list_id) {\r\n          itemsProp = itemsProp.concat(item);\r\n        }\r\n      });\r\n      listComponents = listComponents.concat(\r\n        <List\r\n          key={list.id}\r\n          list={list}\r\n          items={itemsProp}\r\n          onClickList={this.onClickList}\r\n          onEnterList={this.onEnterList}\r\n        />\r\n      );\r\n      itemsProp = [];\r\n    });\r\n\r\n    return (\r\n      <div className={`lists ${show ? '' : 'dn'}`}>\r\n        {\r\n          listComponents.length > 0\r\n            ? listComponents\r\n            : <p className=\"ml3\">No lists found</p>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Lists);\r\n","import {\r\n  FETCH_ITEMS, SET_CURRENT_ITEMS, DELETE_ITEM, TOGGLE_ITEM, ADD_ITEM\r\n} from '../constants/action-types';\r\nimport { loadState } from '../localStorage';\r\n\r\nexport const requestItems = () => (dispatch) => {\r\n  const items = loadState() === undefined ? [] : loadState().itemsReducer.items;\r\n  dispatch({ type: FETCH_ITEMS, payload: items });\r\n}\r\n\r\nexport const setCurrentItems = (listId) => ({\r\n  type: SET_CURRENT_ITEMS,\r\n  payload: listId\r\n});\r\n\r\nexport const deleteItem = (itemId) => ({\r\n  type: DELETE_ITEM,\r\n  payload: itemId\r\n});\r\n\r\nexport const toggleItem = (itemId, checked) => ({\r\n  type: TOGGLE_ITEM,\r\n  payload: { itemId, checked }\r\n});\r\n\r\nexport const addItem = (listId, name) => ({\r\n  type: ADD_ITEM,\r\n  payload: { listId, name }\r\n});\r\n","import React from 'react';\r\n\r\nconst ListItem = ({\r\n  id, listId, checked, name, onClick, onClickDelete, onKeyPress\r\n}) => {\r\n  return (\r\n    <li className={\"truncate noselect\" + (checked ? ' checked' : '')}\r\n    tabIndex=\"0\" onKeyUp={onKeyPress(listId, id, checked)}\r\n    onClick={onClick(listId, id, checked)}>\r\n      {name}\r\n      <span className=\"close\" title=\"Delete item\"\r\n      onClick={onClickDelete(listId, id)}>\r\n        &times;\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\n\r\nconst AddItem = ({\r\n  listId, newItemName, onSetNewItemName, onClickAddItem, onKeyPressAddItem\r\n}) => {\r\n  return (\r\n    <div className=\"mt3\">\r\n      <input\r\n        type=\"text\"\r\n        value={newItemName}\r\n        onChange={onSetNewItemName}\r\n        onKeyPress={onKeyPressAddItem(listId, newItemName)}\r\n        placeholder=\"Item name\"\r\n        className=\"pa3 b--none w-100 w-70-m w-auto-l\"\r\n      />\r\n      <button type=\"button\" onClick={onClickAddItem(listId, newItemName)}\r\n      className=\"white b--none ph4 pv3 mt3 mt0-ns b pointer bg-green hover-bg-dark-green w-30-m w-auto-l\">\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddItem;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editList, deleteList } from '../../actions/lists';\r\nimport { deleteItem, toggleItem, addItem } from '../../actions/items';\r\nimport { checkEmptyString } from '../../helpers';\r\nimport ListItem from '../ListItem/ListItem';\r\nimport AddItem from '../AddItem/AddItem';\r\nimport './CurrentList.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.listsReducer.currentList,\r\n    items: state.itemsReducer.currentItems\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onEditList: (id, title, modified) => dispatch(editList(id, title, modified)),\r\n    onDeleteList: (listId) => dispatch(deleteList(listId)),\r\n    onDeleteItem: (itemId) => dispatch(deleteItem(itemId)),\r\n    onToggleItem: (itemId, checked) => dispatch(toggleItem(itemId, checked)),\r\n    onAddItem: (listId, name) => dispatch(addItem(listId, name))\r\n  }\r\n}\r\n\r\nclass CurrentList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.editTitle = React.createRef();\r\n    this.state = {\r\n      isEditTitle: false,\r\n      newListTitle: '',\r\n      newItemName: ''\r\n    };\r\n  }\r\n\r\n  focusEditTitle = () => {\r\n    this.editTitle.current.focus();\r\n  }\r\n\r\n  hideEditTitle = () => {\r\n    this.setState({\r\n      isEditTitle: false,\r\n      newListTitle: ''\r\n    });\r\n  }\r\n\r\n  showEditTitle = () => {\r\n    this.setState(\r\n      {\r\n        isEditTitle: true,\r\n        newListTitle: this.props.list.title\r\n      },\r\n      () => this.focusEditTitle()\r\n    );\r\n  }\r\n\r\n  onChangeListTitle = (e) => {\r\n    this.setState({ newListTitle: e.target.value });\r\n  }\r\n\r\n  /* handle editing a list */\r\n  onClickEditTitle = (listId, title) => () => {\r\n    this.handleEditTitle(listId, title);\r\n  }\r\n\r\n  onKeyPressEditTitle = (listId, title) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleEditTitle(listId, title);\r\n    }\r\n  }\r\n\r\n  handleEditTitle = (listId, title) => {\r\n    this.props.onEditList(listId, title, new Date());\r\n    this.setState({\r\n      newListTitle: '',\r\n      isEditTitle: false\r\n    });\r\n  }\r\n\r\n  /* handle deleting a list */\r\n  handleDeleteList = (listId) => () => {\r\n    if (window.confirm('Are you sure you want to delete this list?')) {\r\n      this.props.onDeleteList(listId);\r\n      this.hideEditTitle();\r\n      this.setState({ newItemName: '' });\r\n      this.props.showLists();\r\n    }\r\n  }\r\n\r\n  /* handle toggling an item and deleting an item */\r\n  onClickDeleteItem = (listId, itemId) => (e) => {\r\n    e.stopPropagation();\r\n    this.handleDeleteItem(listId, itemId);\r\n  }\r\n\r\n  onClickItem = (listId, itemId, checked) => () => {\r\n    this.handleToggleItem(listId, itemId, checked);\r\n  }\r\n\r\n  onKeyPressItem = (listId, itemId, checked) => (e) => {\r\n    if (e.key === 'Delete') {\r\n      this.handleDeleteItem(listId, itemId);\r\n    } else if (e.key === 'Enter') {\r\n      this.handleToggleItem(listId, itemId, checked);\r\n    }\r\n  }\r\n\r\n  handleDeleteItem = (listId, itemId) => {\r\n    if (window.confirm('Are you sure you want to delete this item?')) {\r\n      this.props.onDeleteItem(itemId);\r\n      this.props.onEditList(listId, this.props.list.title, new Date());\r\n    }\r\n  }\r\n\r\n  handleToggleItem = (listId, itemId, checked) => {\r\n    this.props.onToggleItem(itemId, checked);\r\n    this.props.onEditList(listId, this.props.list.title, new Date());\r\n  }\r\n\r\n  /* handle adding an item */\r\n  onClickAddItem = (listId, name) => () => {\r\n    this.handleAddItem(listId, name);\r\n  }\r\n\r\n  onKeyPressAddItem = (listId, name) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleAddItem(listId, name);\r\n    }\r\n  }\r\n\r\n  handleAddItem = (listId, name) => {\r\n    if (checkEmptyString(name)) {\r\n      return;\r\n    }\r\n    this.props.onAddItem(listId, name);\r\n    this.props.onEditList(listId, this.props.list.title, new Date());\r\n    this.setState({ newItemName: '' });\r\n  }\r\n\r\n  onChangeNewItemName = (e) => {\r\n    this.setState({ newItemName: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { list, items } = this.props;\r\n    const { isEditTitle, newListTitle, newItemName } = this.state;\r\n    if (!list) return null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <button type=\"button\" onClick={this.handleDeleteList(list.id)}\r\n        className=\"white b--none ph4 pv3 b pointer bg-red hover-bg-dark-red\">\r\n          Delete list\r\n        </button>\r\n        {\r\n          isEditTitle ?\r\n            <Fragment>\r\n              <button type=\"button\"\r\n              onClick={this.onClickEditTitle(list.id, newListTitle)}\r\n              className=\"white b--none ph4 pv3 b pointer bg-green hover-bg-dark-green\">\r\n                Save title\r\n              </button>\r\n              <button type=\"button\" onClick={this.hideEditTitle}\r\n              className=\"white b--none ph4 pv3 b pointer bg-blue hover-bg-dark-blue\">\r\n                Don't save title\r\n              </button>\r\n            </Fragment>\r\n          :\r\n            <button type=\"button\" onClick={this.showEditTitle}\r\n            className=\"white b--none ph4 pv3 b pointer bg-blue hover-bg-dark-blue\">\r\n              Edit title\r\n            </button>\r\n        }\r\n        {\r\n          isEditTitle ?\r\n            <input\r\n              type=\"text\"\r\n              value={newListTitle}\r\n              onChange={this.onChangeListTitle}\r\n              onKeyPress={this.onKeyPressEditTitle(list.id, newListTitle)}\r\n              placeholder=\"List title\"\r\n              className=\"pa3 b--none mv4 db\"\r\n              ref={this.editTitle}\r\n            />\r\n          :\r\n            <h2 className=\"f2 mv4\" style={{ minHeight:'50.4px' }}>\r\n              {list.title}\r\n            </h2>\r\n        }\r\n        <p>{list.modified.toLocaleDateString()}</p>\r\n        <ul>\r\n          {\r\n            items.length > 0 ?\r\n              items.map((item) => {\r\n                return (\r\n                  <ListItem\r\n                    key={item.id}\r\n                    id={item.id}\r\n                    listId={list.id}\r\n                    checked={item.checked}\r\n                    name={item.name}\r\n                    onClick={this.onClickItem}\r\n                    onClickDelete={this.onClickDeleteItem}\r\n                    onKeyPress={this.onKeyPressItem}\r\n                  />\r\n                );\r\n              })\r\n            :\r\n              <p>No items</p>\r\n          }\r\n        </ul>\r\n        <AddItem\r\n          listId={list.id}\r\n          newItemName={newItemName}\r\n          onSetNewItemName={this.onChangeNewItemName}\r\n          onClickAddItem={this.onClickAddItem}\r\n          onKeyPressAddItem={this.onKeyPressAddItem}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentList);\r\n","import React, { Component, Fragment } from 'react';\nimport { debounce } from './helpers';\nimport Navigation from './components/Navigation/Navigation';\nimport Lists from './components/Lists/Lists';\nimport CurrentList from './components/CurrentList/CurrentList';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isShowLists: true,\n      isShowToggleButton: true,\n      isShowNavItems: false,\n      isShowAddListInput: true,\n      windowWidth: 0\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', debounce(this.onWindowResize, 250));\n    this.onWindowResize();\n  }\n\n  onWindowResize = () => {\n    const windowWidth = window.innerWidth;\n    if (windowWidth === this.state.windowWidth) {\n      return;\n    }\n    this.setState({ windowWidth });\n    if (windowWidth >= 480) {\n      this.setState({\n        isShowToggleButton: false,\n        isShowNavItems: true,\n        isShowAddListInput: false,\n        isShowLists: true\n      });\n    } else {\n      this.setState({\n        isShowToggleButton: true,\n        isShowNavItems: false,\n        isShowAddListInput: true\n      });\n    }\n  }\n\n  toggleNavigation = () => {\n    this.setState({ isShowNavItems: !this.state.isShowNavItems });\n  }\n\n  showAddListInput = () => this.setState({ isShowAddListInput: true });\n\n  hideAddListInput = () => this.setState({ isShowAddListInput: false });\n\n  hideNavItems = () => this.setState({ isShowNavItems: false });\n\n  scrollToCurrentList = () => {\n    if (this.state.windowWidth < 480) {\n      this.hideLists();\n      this.hideNavItems();\n    }\n  }\n\n  showLists = () => this.setState({ isShowLists: true });\n\n  hideLists = () => this.setState({ isShowLists: false });\n\n  render() {\n    const {\n      isShowLists,\n      isShowToggleButton,\n      isShowNavItems,\n      isShowAddListInput,\n      windowWidth\n    } = this.state;\n\n    return (\n      <Fragment>\n        <Navigation\n          isShowToggleButton={isShowToggleButton}\n          isShowNavItems={isShowNavItems}\n          isShowAddListInput={isShowAddListInput}\n          windowWidth={windowWidth}\n          toggleNavigation={this.toggleNavigation}\n          showAddListInput={this.showAddListInput}\n          hideAddListInput={this.hideAddListInput}\n          hideNavItems={this.hideNavItems}\n          scrollToCurrentList={this.scrollToCurrentList}\n        />\n        <div className=\"fl w-25-l w-third-m w-100\">\n          {\n            isShowLists ?\n              <button type=\"button\" onClick={this.hideLists}\n              className=\"bg-yellow b--none pointer pv1 mb1\">\n                Hide lists\n              </button>\n            :\n              <button type=\"button\" onClick={this.showLists}\n              className=\"bg-yellow b--none pointer pv1 mb1\">\n                Show lists\n              </button>\n          }\n          <Lists\n            show={isShowLists}\n            scrollToCurrentList={this.scrollToCurrentList}\n          />\n        </div>\n        <div className=\"fl w-75-l w-two-thirds-m w-100 pa3\"\n        style={{minHeight: '400px'}}>\n          <CurrentList showLists={this.showLists} />\n        </div>\n        <div className=\"ma3 tc\">\n          Icons made by <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">\n          Smashicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n          www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\" rel=\"noopener noreferrer\">\n          CC 3.0 BY</a>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}