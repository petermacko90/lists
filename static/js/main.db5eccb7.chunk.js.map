{"version":3,"sources":["reducers/lists.js","reducers/items.js","localStorage.js","helpers.js","store/store.js","constants/action-types.js","middleware/middleware.js","components/AddList/AddList.js","components/Navigation/Navigation.js","actions/lists.js","components/List/List.js","components/Lists/Lists.js","actions/items.js","components/ListItem/ListItem.js","components/AddItem/AddItem.js","components/CurrentList/CurrentList.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["initialStateLists","lists","currentList","initialState","items","currentItems","loadState","serializedState","localStorage","getItem","JSON","parse","key","value","Date","err","checkEmptyString","name","replace","debounce","func","wait","immediate","timeout","context","this","args","arguments","callNow","clearTimeout","setTimeout","apply","persistedState","rootReducer","combineReducers","listsReducer","state","length","undefined","action","type","Object","objectSpread","payload","map","list","id","filter","newList","nextId","title","modified","concat","itemsReducer","item","list_id","itemId","checked","newItem","listId","store","createStore","applyMiddleware","next","maxId","getState","reduce","a","b","dispatch","thunkMiddleware","logger","subscribe","stringify","setItem","console","log","saveState","AddList","_ref","newListTitle","isShowAddListInput","onChangeNewListTitle","onClickAddList","onKeyPressAddList","addListRef","react_default","createElement","react","onClick","className","onChange","onKeyPress","placeholder","maxLength","ref","Navigation","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleAddList","e","props","hideAddListInput","scrollToCurrentList","onAddList","setState","showAddListInput","target","addList","React","createRef","isShowNavItems","current","focus","components_AddList_AddList","isShowToggleButton","toggleNavigation","aria-label","Component","connect","List","onClickList","onEnterList","tabIndex","toLocaleDateString","slice","Lists","handleSelectList","onSetCurrentList","onSetCurrentItems","onRequestLists","onRequestItems","_this2","_this$props","isShowLists","showLists","hideLists","listComponents","itemsProp","forEach","components_List_List","setCurrentList","ListItem","onClickDelete","onKeyUp","AddItem","newItemName","onSetNewItemName","onClickAddItem","onKeyPressAddItem","CurrentList","focusEditTitle","editTitle","hideEditTitle","isEditTitle","showEditTitle","onChangeListTitle","onClickEditTitle","handleEditTitle","onKeyPressEditTitle","onEditList","handleDeleteList","window","confirm","onDeleteList","onClickDeleteItem","stopPropagation","handleDeleteItem","onClickItem","handleToggleItem","onKeyPressItem","onDeleteItem","onToggleItem","handleAddItem","onAddItem","onChangeNewItemName","prevProps","_this$state","style","minHeight","overflowWrap","components_ListItem_ListItem","components_AddItem_AddItem","editList","deleteList","deleteItem","toggleItem","addItem","Footer","clear","href","rel","App","onWindowResize","windowWidth","innerWidth","addEventListener","components_Navigation_Navigation","components_Lists_Lists","components_CurrentList_CurrentList","components_Footer_Footer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.db5eccb7.chunk.js","sourcesContent":["import {\r\n  FETCH_LISTS, SET_CURRENT_LIST, EDIT_LIST, DELETE_LIST, ADD_LIST_WITH_ID\r\n} from '../constants/action-types';\r\n\r\nconst initialStateLists = {\r\n  lists: [],\r\n  currentList: null\r\n};\r\n\r\nexport const listsReducer = (state = initialStateLists, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_LISTS:\r\n      return { ...state, lists: action.payload };\r\n    case SET_CURRENT_LIST:\r\n      return { ...state, currentList: action.payload };\r\n    case EDIT_LIST:\r\n      const lists = state.lists.map((list) => {\r\n        if (list.id === action.payload.id) {\r\n          return { ...list, ...action.payload };\r\n        }\r\n        return list;\r\n      });\r\n      return {\r\n        ...state,\r\n        lists,\r\n        currentList: { ...state.currentList, ...action.payload }\r\n      };\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        lists: state.lists.filter(list => list.id !== action.payload),\r\n        currentList: null\r\n      };\r\n    case ADD_LIST_WITH_ID:\r\n      const newList = {\r\n        id: action.payload.nextId,\r\n        title: action.payload.title,\r\n        modified: action.payload.modified\r\n      };\r\n      return {\r\n        ...state,\r\n        lists: state.lists.concat(newList),\r\n        currentList: newList\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_ITEMS,\r\n  SET_CURRENT_ITEMS,\r\n  DELETE_ITEM,\r\n  TOGGLE_ITEM,\r\n  ADD_ITEM_WITH_ID,\r\n  ADD_LIST_WITH_ID,\r\n  DELETE_LIST\r\n} from '../constants/action-types';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  currentItems: []\r\n};\r\n\r\nexport const itemsReducer = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_ITEMS:\r\n      return { ...state, items: action.payload };\r\n    case SET_CURRENT_ITEMS:\r\n      return {\r\n        ...state,\r\n        currentItems: state.items.filter(item => {\r\n          return item.list_id === action.payload;\r\n        })\r\n      };\r\n    case DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item.id !== action.payload),\r\n        currentItems: state.currentItems.filter(item => {\r\n          return item.id !== action.payload;\r\n        })\r\n      };\r\n    case TOGGLE_ITEM:\r\n      const items = state.items.map((item) => {\r\n        if (item.id !== action.payload.itemId) {\r\n          return item;\r\n        }\r\n        return { ...item, ...item.checked = !action.payload.checked };\r\n      });\r\n      const currentItems = state.currentItems.map((item) => {\r\n        if (item.id !== action.payload.itemId) {\r\n          return item;\r\n        }\r\n        return { ...item, ...item.checked = !action.payload.checked };\r\n      });\r\n      return { ...state, currentItems, items };\r\n    case ADD_ITEM_WITH_ID:\r\n      const newItem = {\r\n        list_id: action.payload.listId,\r\n        id: action.payload.nextId,\r\n        name: action.payload.name,\r\n        checked: false\r\n      };\r\n      return {\r\n        ...state,\r\n        items: state.items.concat(newItem),\r\n        currentItems: state.currentItems.concat(newItem)\r\n      };\r\n    case ADD_LIST_WITH_ID:\r\n      return { ...state, currentItems: [] };\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => {\r\n          return item.list_id !== action.payload\r\n        }),\r\n        currentItems: state.currentItems.filter(item => {\r\n          return item.list_id !== action.payload\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState, (key, value) => {\r\n      if (key === 'modified') {\r\n        return new Date(value);\r\n      } else {\r\n        return value;\r\n      }\r\n    });\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.log('localStorage saveState error: ' + err);\r\n  }\r\n}\r\n","export const checkEmptyString = (name) => {\r\n  if (!name.replace(/\\s+/g, '')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function debounce(func, wait, immediate) {\r\n\tlet timeout;\r\n\treturn function() {\r\n    let context = this;\r\n    let args = arguments;\r\n\t\tlet later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tlet callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t}\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { logger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { listsReducer } from '../reducers/lists';\r\nimport { itemsReducer } from '../reducers/items';\r\nimport { addListOrItemMiddleware } from '../middleware/middleware';\r\nimport { loadState, saveState } from '../localStorage';\r\nimport { debounce } from '../helpers';\r\n\r\nconst persistedState = loadState();\r\nconst rootReducer = combineReducers({ listsReducer, itemsReducer });\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  applyMiddleware(addListOrItemMiddleware, thunkMiddleware, logger)\r\n);\r\n\r\nstore.subscribe(\r\n  debounce(() => {\r\n    saveState({\r\n      listsReducer: { lists: store.getState().listsReducer.lists },\r\n      itemsReducer: { items: store.getState().itemsReducer.items }\r\n    });\r\n  }, 1000)\r\n);\r\n\r\nexport default store;\r\n","export const FETCH_LISTS = 'FETCH_LISTS';\r\nexport const SET_CURRENT_LIST = 'SET_CURRENT_LIST';\r\nexport const EDIT_LIST = 'EDIT_LIST';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const ADD_LIST_WITH_ID = 'ADD_LIST_WITH_ID';\r\n\r\nexport const FETCH_ITEMS = 'FETCH_ITEMS';\r\nexport const SET_CURRENT_ITEMS = 'SET_CURRENT_ITEMS';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const TOGGLE_ITEM = 'TOGGLE_ITEM';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const ADD_ITEM_WITH_ID = 'ADD_ITEM_WITH_ID';\r\n","import {\r\n  ADD_ITEM, ADD_ITEM_WITH_ID, ADD_LIST, ADD_LIST_WITH_ID\r\n} from '../constants/action-types';\r\n\r\nexport const addListOrItemMiddleware = store => next => action => {\r\n  if (action.type === ADD_ITEM) {\r\n    const items = store.getState().itemsReducer.items;\r\n    const maxId = items.reduce((a, b) => {\r\n      return (a.id > b.id) ? a.id : b.id;\r\n    }, 0);\r\n    store.dispatch({\r\n      type: ADD_ITEM_WITH_ID,\r\n      payload: {\r\n        listId: action.payload.listId,\r\n        name: action.payload.name,\r\n        nextId: maxId + 1\r\n      }\r\n    });\r\n  }\r\n  if (action.type === ADD_LIST) {\r\n    const lists = store.getState().listsReducer.lists;\r\n    const maxId = lists.reduce((a, b) => {\r\n      return (a.id > b.id) ? a.id : b.id;\r\n    }, 0);\r\n    store.dispatch({\r\n      type: ADD_LIST_WITH_ID,\r\n      payload: {\r\n        title: action.payload.title,\r\n        nextId: maxId + 1,\r\n        modified: action.payload.modified\r\n      }\r\n    })\r\n  }\r\n  next(action);\r\n}\r\n","import React, { Fragment } from 'react';\r\n\r\nconst AddList = ({\r\n  newListTitle,\r\n  isShowAddListInput,\r\n  onChangeNewListTitle,\r\n  onClickAddList,\r\n  onKeyPressAddList,\r\n  addListRef\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <button type=\"button\" onClick={onClickAddList}\r\n      className=\"white b--none ph3 ph4-ns pv3 b pointer bg-green hover-bg-dark-green mv3 w-40 w-auto-ns\">\r\n        Add list\r\n      </button>\r\n      {\r\n        isShowAddListInput &&\r\n          <input\r\n            type=\"text\"\r\n            value={newListTitle}\r\n            onChange={onChangeNewListTitle}\r\n            onKeyPress={onKeyPressAddList}\r\n            placeholder=\"List title\"\r\n            className=\"pa3 b--none mv3 w-60 w-auto-ns\"\r\n            maxLength=\"50\"\r\n            ref={addListRef}\r\n          />\r\n      }\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default AddList;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addList } from '../../actions/lists';\r\nimport { checkEmptyString } from '../../helpers';\r\nimport AddList from '../AddList/AddList';\r\nimport './Navigation.css';\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddList: (title) => dispatch(addList(title))\r\n  };\r\n}\r\n\r\nclass Navigation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.addList = React.createRef();\r\n    this.state = {\r\n      newListTitle: ''\r\n    };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.isShowAddListInput && this.props.isShowNavItems) {\r\n      this.addList.current.focus();\r\n    }\r\n  }\r\n\r\n  /* handle adding a list */\r\n\r\n  onClickAddList = (title) => () => {\r\n    this.handleAddList(title);\r\n  }\r\n\r\n  onKeyPressAddList = (title) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleAddList(title);\r\n    }\r\n  }\r\n\r\n  handleAddList = (title) => {\r\n    if (this.props.isShowAddListInput) {\r\n      if (checkEmptyString(title)) {\r\n        this.props.hideAddListInput();\r\n        return;\r\n      }\r\n      this.props.scrollToCurrentList();\r\n      this.props.onAddList(title);\r\n      this.setState({ newListTitle: '' });\r\n    } else {\r\n      this.props.showAddListInput();\r\n    }\r\n  }\r\n\r\n  onChangeNewListTitle = (e) => {\r\n    this.setState({ newListTitle: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { newListTitle } = this.state;\r\n\r\n    return (\r\n      <nav className=\"flex flex-column flex-row-ns bg-yellow shadow-2 mb2\">\r\n        <h1 className=\"flex-column flex-row-ns f2 pa3 mv0\">Lists</h1>\r\n        {\r\n          this.props.isShowNavItems &&\r\n            <div className=\"flex-column flex-row-ns mh3 mh0-ns\">\r\n              <AddList\r\n                newListTitle={newListTitle}\r\n                isShowAddListInput={this.props.isShowAddListInput}\r\n                onChangeNewListTitle={this.onChangeNewListTitle}\r\n                onClickAddList={this.onClickAddList(newListTitle)}\r\n                onKeyPressAddList={this.onKeyPressAddList(newListTitle)}\r\n                addListRef={this.addList}\r\n              />\r\n            </div>\r\n        }\r\n        {\r\n          this.props.isShowToggleButton &&\r\n            <button type=\"button\" onClick={this.props.toggleNavigation}\r\n            className=\"b--none pa3 ma3 pointer absolute right-0 bg-transparent\"\r\n            aria-label=\"Toggle navigation\">\r\n              <span className=\"bar db bg-black\"></span>\r\n              <span className=\"bar db bg-black\"></span>\r\n              <span className=\"bar db bg-black\"></span>\r\n            </button>\r\n        }\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Navigation);\r\n","import {\r\n  FETCH_LISTS, SET_CURRENT_LIST, EDIT_LIST, DELETE_LIST, ADD_LIST\r\n} from '../constants/action-types';\r\nimport { loadState } from '../localStorage';\r\n\r\nexport const requestLists = () => (dispatch) => {\r\n  const lists = loadState() === undefined ? [] : loadState().listsReducer.lists;\r\n  dispatch({ type: FETCH_LISTS, payload: lists });\r\n}\r\n\r\nexport const setCurrentList = (list) => ({\r\n  type: SET_CURRENT_LIST,\r\n  payload: list\r\n});\r\n\r\nexport const editList = (id, title, modified) => ({\r\n  type: EDIT_LIST,\r\n  payload: { id, title, modified }\r\n});\r\n\r\nexport const deleteList = (listId) => ({\r\n  type: DELETE_LIST,\r\n  payload: listId\r\n});\r\n\r\nexport const addList = (title) => ({\r\n  type: ADD_LIST,\r\n  payload: { title, modified: new Date() }\r\n});\r\n","import React from 'react';\r\nimport './List.css';\r\n\r\nconst List = ({ list, items, onClickList, onEnterList }) => {\r\n\treturn (\r\n\t\t<div className=\"pa2 ma3 bg-yellow pointer shadow-3 noselect list\"\r\n\t\ttabIndex=\"0\" onClick={onClickList(list, list.id)}\r\n\t\tonKeyPress={onEnterList(list, list.id)}>\r\n\t\t\t<h3 className=\"f3-l f4-m f5 truncate\">{list.title}</h3>\r\n\t\t\t<p>{list.modified.toLocaleDateString()}</p>\r\n\t\t\t<p className=\"truncate\">\r\n\t\t\t\t{\r\n\t\t\t\t\titems.slice(0, 5).map((item) => {\r\n\t\t\t\t\t\treturn <span key={item.id}>- {item.name} </span>;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default List;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport List from '../List/List';\r\nimport './Lists.css';\r\nimport { requestLists, setCurrentList } from '../../actions/lists';\r\nimport { requestItems, setCurrentItems } from '../../actions/items';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    lists: state.listsReducer.lists,\r\n    items: state.itemsReducer.items\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRequestLists: () => dispatch(requestLists()),\r\n    onRequestItems: () => dispatch(requestItems()),\r\n    onSetCurrentList: (list) => dispatch(setCurrentList(list)),\r\n    onSetCurrentItems: (items) => dispatch(setCurrentItems(items))\r\n  }\r\n}\r\n\r\nclass Lists extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestLists();\r\n    this.props.onRequestItems();\r\n  }\r\n\r\n  /* handle selecting a list */\r\n  onClickList = (list, listId) => () => {\r\n    this.handleSelectList(list, listId);\r\n  }\r\n\r\n  onEnterList = (list, listId) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleSelectList(list, listId);\r\n    }\r\n  }\r\n\r\n  handleSelectList = (list, listId) => {\r\n    this.props.onSetCurrentList(list);\r\n    this.props.onSetCurrentItems(listId);\r\n    this.props.scrollToCurrentList();\r\n  }\r\n\r\n  render() {\r\n    const { lists, items, isShowLists, showLists, hideLists } = this.props;\r\n    let listComponents = [];\r\n    let itemsProp = [];\r\n\r\n    lists.forEach((list) => {\r\n      items.forEach((item) => {\r\n        if (list.id === item.list_id) {\r\n          itemsProp = itemsProp.concat(item);\r\n        }\r\n      });\r\n      listComponents = listComponents.concat(\r\n        <List\r\n          key={list.id}\r\n          list={list}\r\n          items={itemsProp}\r\n          onClickList={this.onClickList}\r\n          onEnterList={this.onEnterList}\r\n        />\r\n      );\r\n      itemsProp = [];\r\n    });\r\n\r\n    return (\r\n      <div className=\"fl w-25-l w-third-m w-100\">\r\n        {\r\n          isShowLists ?\r\n            <button type=\"button\" onClick={hideLists}\r\n            className=\"bg-yellow b--none pointer pv1 ml3 mv1 toggle-lists\">\r\n              Hide lists &#9650;\r\n            </button>\r\n          :\r\n            <button type=\"button\" onClick={showLists}\r\n            className=\"bg-yellow b--none pointer pv1 ml3 mv1 toggle-lists\">\r\n              Show lists &#9660;\r\n            </button>\r\n        }\r\n        <div className={`lists ${isShowLists ? '' : 'dn'}`}>\r\n          {\r\n            listComponents.length > 0 ?\r\n              <Fragment>\r\n                {listComponents}\r\n                <hr className=\"dn-ns moon-gray\" />\r\n              </Fragment>\r\n            :\r\n              <p className=\"ml3\">No lists found</p>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Lists);\r\n","import {\r\n  FETCH_ITEMS, SET_CURRENT_ITEMS, DELETE_ITEM, TOGGLE_ITEM, ADD_ITEM\r\n} from '../constants/action-types';\r\nimport { loadState } from '../localStorage';\r\n\r\nexport const requestItems = () => (dispatch) => {\r\n  const items = loadState() === undefined ? [] : loadState().itemsReducer.items;\r\n  dispatch({ type: FETCH_ITEMS, payload: items });\r\n}\r\n\r\nexport const setCurrentItems = (listId) => ({\r\n  type: SET_CURRENT_ITEMS,\r\n  payload: listId\r\n});\r\n\r\nexport const deleteItem = (itemId) => ({\r\n  type: DELETE_ITEM,\r\n  payload: itemId\r\n});\r\n\r\nexport const toggleItem = (itemId, checked) => ({\r\n  type: TOGGLE_ITEM,\r\n  payload: { itemId, checked }\r\n});\r\n\r\nexport const addItem = (listId, name) => ({\r\n  type: ADD_ITEM,\r\n  payload: { listId, name }\r\n});\r\n","import React from 'react';\r\n\r\nconst ListItem = ({\r\n  id, listId, checked, name, onClick, onClickDelete, onKeyPress\r\n}) => {\r\n  return (\r\n    <li className={\"noselect\" + (checked ? ' checked' : '')}\r\n    tabIndex=\"0\" onKeyUp={onKeyPress(listId, id, checked)}\r\n    onClick={onClick(listId, id, checked)}>\r\n      {name}\r\n      <span className=\"close\" title=\"Delete item\"\r\n      onClick={onClickDelete(listId, id)}>\r\n        &times;\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\n\r\nconst AddItem = ({\r\n  listId, newItemName, onSetNewItemName, onClickAddItem, onKeyPressAddItem\r\n}) => {\r\n  return (\r\n    <div className=\"mt3\">\r\n      <input\r\n        type=\"text\"\r\n        value={newItemName}\r\n        onChange={onSetNewItemName}\r\n        onKeyPress={onKeyPressAddItem(listId, newItemName)}\r\n        placeholder=\"Item name\"\r\n        maxLength=\"100\"\r\n        className=\"pa3 b--none w-100 w-70-m w-auto-l\"\r\n      />\r\n      <button type=\"button\" onClick={onClickAddItem(listId, newItemName)}\r\n      className=\"white b--none ph4 pv3 mt3 mt0-ns b pointer bg-green hover-bg-dark-green w-30-m w-auto-l\">\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddItem;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editList, deleteList } from '../../actions/lists';\r\nimport { deleteItem, toggleItem, addItem } from '../../actions/items';\r\nimport { checkEmptyString } from '../../helpers';\r\nimport ListItem from '../ListItem/ListItem';\r\nimport AddItem from '../AddItem/AddItem';\r\nimport './CurrentList.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.listsReducer.currentList,\r\n    items: state.itemsReducer.currentItems\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onEditList: (id, title, modified) => dispatch(editList(id, title, modified)),\r\n    onDeleteList: (listId) => dispatch(deleteList(listId)),\r\n    onDeleteItem: (itemId) => dispatch(deleteItem(itemId)),\r\n    onToggleItem: (itemId, checked) => dispatch(toggleItem(itemId, checked)),\r\n    onAddItem: (listId, name) => dispatch(addItem(listId, name))\r\n  }\r\n}\r\n\r\nclass CurrentList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.editTitle = React.createRef();\r\n    this.state = {\r\n      isEditTitle: false,\r\n      newListTitle: '',\r\n      newItemName: ''\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      !prevProps.list && !this.props.list &&\r\n      this.props.list.id !== prevProps.list.id\r\n    ) {\r\n      this.hideEditTitle();\r\n    }\r\n  }\r\n\r\n  focusEditTitle = () => {\r\n    this.editTitle.current.focus();\r\n  }\r\n\r\n  hideEditTitle = () => {\r\n    this.setState({\r\n      isEditTitle: false,\r\n      newListTitle: ''\r\n    });\r\n  }\r\n\r\n  showEditTitle = () => {\r\n    this.setState(\r\n      {\r\n        isEditTitle: true,\r\n        newListTitle: this.props.list.title\r\n      },\r\n      () => this.focusEditTitle()\r\n    );\r\n  }\r\n\r\n  onChangeListTitle = (e) => {\r\n    this.setState({ newListTitle: e.target.value });\r\n  }\r\n\r\n  /* handle editing a list */\r\n  onClickEditTitle = (listId, title) => () => {\r\n    this.handleEditTitle(listId, title);\r\n  }\r\n\r\n  onKeyPressEditTitle = (listId, title) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleEditTitle(listId, title);\r\n    }\r\n  }\r\n\r\n  handleEditTitle = (listId, title) => {\r\n    if (checkEmptyString(title)) {\r\n      return;\r\n    }\r\n    this.props.onEditList(listId, title, new Date());\r\n    this.setState({\r\n      newListTitle: '',\r\n      isEditTitle: false\r\n    });\r\n  }\r\n\r\n  /* handle deleting a list */\r\n  handleDeleteList = (listId) => () => {\r\n    if (window.confirm('Are you sure you want to delete this list?')) {\r\n      this.props.onDeleteList(listId);\r\n      this.hideEditTitle();\r\n      this.setState({ newItemName: '' });\r\n      this.props.showLists();\r\n    }\r\n  }\r\n\r\n  /* handle toggling an item and deleting an item */\r\n  onClickDeleteItem = (listId, itemId) => (e) => {\r\n    e.stopPropagation();\r\n    this.handleDeleteItem(listId, itemId);\r\n  }\r\n\r\n  onClickItem = (listId, itemId, checked) => () => {\r\n    this.handleToggleItem(listId, itemId, checked);\r\n  }\r\n\r\n  onKeyPressItem = (listId, itemId, checked) => (e) => {\r\n    if (e.key === 'Delete') {\r\n      this.handleDeleteItem(listId, itemId);\r\n    } else if (e.key === 'Enter') {\r\n      this.handleToggleItem(listId, itemId, checked);\r\n    }\r\n  }\r\n\r\n  handleDeleteItem = (listId, itemId) => {\r\n    if (window.confirm('Are you sure you want to delete this item?')) {\r\n      this.props.onDeleteItem(itemId);\r\n      this.props.onEditList(listId, this.props.list.title, new Date());\r\n    }\r\n  }\r\n\r\n  handleToggleItem = (listId, itemId, checked) => {\r\n    this.props.onToggleItem(itemId, checked);\r\n    this.props.onEditList(listId, this.props.list.title, new Date());\r\n  }\r\n\r\n  /* handle adding an item */\r\n  onClickAddItem = (listId, name) => () => {\r\n    this.handleAddItem(listId, name);\r\n  }\r\n\r\n  onKeyPressAddItem = (listId, name) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleAddItem(listId, name);\r\n    }\r\n  }\r\n\r\n  handleAddItem = (listId, name) => {\r\n    if (checkEmptyString(name)) {\r\n      return;\r\n    }\r\n    this.props.onAddItem(listId, name);\r\n    this.props.onEditList(listId, this.props.list.title, new Date());\r\n    this.setState({ newItemName: '' });\r\n  }\r\n\r\n  onChangeNewItemName = (e) => {\r\n    this.setState({ newItemName: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { list, items } = this.props;\r\n    const { isEditTitle, newListTitle, newItemName } = this.state;\r\n    if (!list) return null;\r\n\r\n    return (\r\n      <div className=\"fl w-75-l w-two-thirds-m w-100 pa3\">\r\n        <button type=\"button\" onClick={this.handleDeleteList(list.id)}\r\n        className=\"white b--none ph4 pv3 b pointer bg-red hover-bg-dark-red\">\r\n          Delete list\r\n        </button>\r\n        {\r\n          isEditTitle ?\r\n            <Fragment>\r\n              <button type=\"button\"\r\n              onClick={this.onClickEditTitle(list.id, newListTitle)}\r\n              className=\"white b--none ph4 pv3 b pointer bg-green hover-bg-dark-green\">\r\n                Save title\r\n              </button>\r\n              <button type=\"button\" onClick={this.hideEditTitle}\r\n              className=\"white b--none ph4 pv3 b pointer bg-blue hover-bg-dark-blue\">\r\n                Don't save title\r\n              </button>\r\n            </Fragment>\r\n          :\r\n            <button type=\"button\" onClick={this.showEditTitle}\r\n            className=\"white b--none ph4 pv3 b pointer bg-blue hover-bg-dark-blue\">\r\n              Edit title\r\n            </button>\r\n        }\r\n        {\r\n          isEditTitle ?\r\n            <input\r\n              type=\"text\"\r\n              value={newListTitle}\r\n              onChange={this.onChangeListTitle}\r\n              onKeyPress={this.onKeyPressEditTitle(list.id, newListTitle)}\r\n              placeholder=\"List title\"\r\n              className=\"pa3 b--none mv4 db\"\r\n              maxLength=\"50\"\r\n              ref={this.editTitle}\r\n            />\r\n          :\r\n            <h2 className=\"f2 mv4\"\r\n            style={{ minHeight: '50.4px', overflowWrap: 'break-word' }}>\r\n              {list.title}\r\n            </h2>\r\n        }\r\n        <p>{list.modified.toLocaleDateString()}</p>\r\n        <ul>\r\n          {\r\n            items.length > 0 ?\r\n              items.map((item) => {\r\n                return (\r\n                  <ListItem\r\n                    key={item.id}\r\n                    id={item.id}\r\n                    listId={list.id}\r\n                    checked={item.checked}\r\n                    name={item.name}\r\n                    onClick={this.onClickItem}\r\n                    onClickDelete={this.onClickDeleteItem}\r\n                    onKeyPress={this.onKeyPressItem}\r\n                  />\r\n                );\r\n              })\r\n            :\r\n              <p>No items</p>\r\n          }\r\n        </ul>\r\n        <AddItem\r\n          listId={list.id}\r\n          newItemName={newItemName}\r\n          onSetNewItemName={this.onChangeNewItemName}\r\n          onClickAddItem={this.onClickAddItem}\r\n          onKeyPressAddItem={this.onKeyPressAddItem}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentList);\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"ma3 tc\" style={{ clear: 'both' }}>\r\n      Icons made by <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">\r\n      Smashicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n      www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n      CC 3.0 BY</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { debounce } from './helpers';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Lists from './components/Lists/Lists';\r\nimport CurrentList from './components/CurrentList/CurrentList';\r\nimport Footer from './components/Footer/Footer';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isShowLists: true,\r\n      isShowToggleButton: true,\r\n      isShowNavItems: false,\r\n      isShowAddListInput: true,\r\n      windowWidth: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', debounce(this.onWindowResize, 250));\r\n    this.onWindowResize();\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    const windowWidth = window.innerWidth;\r\n    if (windowWidth === this.state.windowWidth) {\r\n      return;\r\n    }\r\n    this.setState({ windowWidth });\r\n    if (windowWidth >= 480) {\r\n      this.setState({\r\n        isShowToggleButton: false,\r\n        isShowNavItems: true,\r\n        isShowAddListInput: false,\r\n        isShowLists: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isShowToggleButton: true,\r\n        isShowNavItems: false,\r\n        isShowAddListInput: true\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleNavigation = () => {\r\n    this.setState({ isShowNavItems: !this.state.isShowNavItems });\r\n  }\r\n\r\n  showAddListInput = () => this.setState({ isShowAddListInput: true });\r\n\r\n  hideAddListInput = () => this.setState({ isShowAddListInput: false });\r\n\r\n  scrollToCurrentList = () => {\r\n    if (this.state.windowWidth < 480) {\r\n      this.hideLists();\r\n      this.setState({ isShowNavItems: false });\r\n    }\r\n  }\r\n\r\n  showLists = () => this.setState({ isShowLists: true });\r\n\r\n  hideLists = () => this.setState({ isShowLists: false });\r\n\r\n  render() {\r\n    const {\r\n      isShowLists,\r\n      isShowToggleButton,\r\n      isShowNavItems,\r\n      isShowAddListInput\r\n    } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Navigation\r\n          isShowToggleButton={isShowToggleButton}\r\n          isShowNavItems={isShowNavItems}\r\n          isShowAddListInput={isShowAddListInput}\r\n          toggleNavigation={this.toggleNavigation}\r\n          showAddListInput={this.showAddListInput}\r\n          hideAddListInput={this.hideAddListInput}\r\n          scrollToCurrentList={this.scrollToCurrentList}\r\n        />\r\n        <Lists\r\n          isShowLists={isShowLists}\r\n          showLists={this.showLists}\r\n          hideLists={this.hideLists}\r\n          scrollToCurrentList={this.scrollToCurrentList}\r\n        />\r\n        <CurrentList showLists={this.showLists} />\r\n        <Footer />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}