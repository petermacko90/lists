{"version":3,"sources":["reducers/lists.js","reducers/items.js","localStorage.js","helpers.js","store/store.js","constants/action-types.js","middleware/middleware.js","components/Navigation/Navigation.js","components/List/List.js","components/Lists/Lists.js","actions/lists.js","actions/items.js","components/ListItem/ListItem.js","components/AddItem/AddItem.js","components/CurrentList/CurrentList.js","components/AddList/AddList.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["initialStateLists","lists","currentList","initialState","items","currentItems","loadState","serializedState","localStorage","getItem","JSON","parse","key","value","Date","err","checkEmptyString","name","replace","debounce","func","wait","immediate","timeout","context","this","args","arguments","callNow","clearTimeout","setTimeout","apply","persistedState","rootReducer","combineReducers","listsReducer","state","length","undefined","action","type","Object","objectSpread","payload","map","list","id","filter","newList","nextId","title","modified","concat","itemsReducer","item","list_id","itemId","checked","newItem","listId","store","createStore","applyMiddleware","next","maxId","getState","reduce","a","b","dispatch","thunkMiddleware","logger","subscribe","stringify","setItem","console","log","saveState","Navigation","_ref","showAddList","react_default","createElement","className","onClick","List","onClickList","onEnterList","tabIndex","onKeyPress","toLocaleDateString","slice","Lists","_this","handleSelectList","e","props","onSetCurrentList","onSetCurrentItems","scrollToCurrentList","onRequestLists","onRequestItems","_this2","_this$props","isShowLists","showLists","hideLists","listComponents","itemsProp","forEach","components_List_List","react","Component","connect","setCurrentList","ListItem","onClickDelete","onKeyUp","AddItem","newItemName","onSetNewItemName","onClickAddItem","onKeyPressAddItem","onChange","placeholder","maxLength","CurrentList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","focusEditTitle","editTitle","current","focus","hideEditTitle","setState","isEditTitle","newListTitle","showEditTitle","onChangeListTitle","target","onClickEditTitle","handleEditTitle","onKeyPressEditTitle","onEditList","handleDeleteList","window","confirm","onDeleteList","onClickDeleteItem","stopPropagation","handleDeleteItem","onClickItem","handleToggleItem","onKeyPressItem","onDeleteItem","onToggleItem","handleAddItem","onAddItem","onChangeNewItemName","React","createRef","prevProps","_this$state","ref","style","minHeight","overflowWrap","components_ListItem_ListItem","components_AddItem_AddItem","editList","deleteList","deleteItem","toggleItem","addItem","AddList","onChangeNewListTitle","onClickAddList","handleAddList","onKeyPressAddList","onAddList","autoFocus","addList","Footer","clear","href","rel","App","onWindowResize","windowWidth","innerWidth","isShowAddList","hideAddList","addEventListener","components_Navigation_Navigation","components_Lists_Lists","components_AddList_AddList","components_CurrentList_CurrentList","components_Footer_Footer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8d4ed854.chunk.js","sourcesContent":["import {\r\n  FETCH_LISTS, SET_CURRENT_LIST, EDIT_LIST, DELETE_LIST, ADD_LIST_WITH_ID\r\n} from '../constants/action-types';\r\n\r\nconst initialStateLists = {\r\n  lists: [],\r\n  currentList: null\r\n};\r\n\r\nexport const listsReducer = (state = initialStateLists, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_LISTS:\r\n      return { ...state, lists: action.payload };\r\n    case SET_CURRENT_LIST:\r\n      return { ...state, currentList: action.payload };\r\n    case EDIT_LIST:\r\n      const lists = state.lists.map((list) => {\r\n        if (list.id === action.payload.id) {\r\n          return { ...list, ...action.payload };\r\n        }\r\n        return list;\r\n      });\r\n      return {\r\n        ...state,\r\n        lists,\r\n        currentList: { ...state.currentList, ...action.payload }\r\n      };\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        lists: state.lists.filter(list => list.id !== action.payload),\r\n        currentList: null\r\n      };\r\n    case ADD_LIST_WITH_ID:\r\n      const newList = {\r\n        id: action.payload.nextId,\r\n        title: action.payload.title,\r\n        modified: action.payload.modified\r\n      };\r\n      return {\r\n        ...state,\r\n        lists: state.lists.concat(newList),\r\n        currentList: newList\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_ITEMS,\r\n  SET_CURRENT_ITEMS,\r\n  DELETE_ITEM,\r\n  TOGGLE_ITEM,\r\n  ADD_ITEM_WITH_ID,\r\n  ADD_LIST_WITH_ID,\r\n  DELETE_LIST\r\n} from '../constants/action-types';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  currentItems: []\r\n};\r\n\r\nexport const itemsReducer = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_ITEMS:\r\n      return { ...state, items: action.payload };\r\n    case SET_CURRENT_ITEMS:\r\n      return {\r\n        ...state,\r\n        currentItems: state.items.filter(item => {\r\n          return item.list_id === action.payload;\r\n        })\r\n      };\r\n    case DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item.id !== action.payload),\r\n        currentItems: state.currentItems.filter(item => {\r\n          return item.id !== action.payload;\r\n        })\r\n      };\r\n    case TOGGLE_ITEM:\r\n      const items = state.items.map((item) => {\r\n        if (item.id !== action.payload.itemId) {\r\n          return item;\r\n        }\r\n        return { ...item, ...item.checked = !action.payload.checked };\r\n      });\r\n      const currentItems = state.currentItems.map((item) => {\r\n        if (item.id !== action.payload.itemId) {\r\n          return item;\r\n        }\r\n        return { ...item, ...item.checked = !action.payload.checked };\r\n      });\r\n      return { ...state, currentItems, items };\r\n    case ADD_ITEM_WITH_ID:\r\n      const newItem = {\r\n        list_id: action.payload.listId,\r\n        id: action.payload.nextId,\r\n        name: action.payload.name,\r\n        checked: false\r\n      };\r\n      return {\r\n        ...state,\r\n        items: state.items.concat(newItem),\r\n        currentItems: state.currentItems.concat(newItem)\r\n      };\r\n    case ADD_LIST_WITH_ID:\r\n      return { ...state, currentItems: [] };\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => {\r\n          return item.list_id !== action.payload\r\n        }),\r\n        currentItems: state.currentItems.filter(item => {\r\n          return item.list_id !== action.payload\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState, (key, value) => {\r\n      if (key === 'modified') {\r\n        return new Date(value);\r\n      } else {\r\n        return value;\r\n      }\r\n    });\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.log('localStorage saveState error: ' + err);\r\n  }\r\n}\r\n","export const checkEmptyString = (name) => {\r\n  if (!name.replace(/\\s+/g, '')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function debounce(func, wait, immediate) {\r\n\tlet timeout;\r\n\treturn function() {\r\n    let context = this;\r\n    let args = arguments;\r\n\t\tlet later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tlet callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t}\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { logger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { listsReducer } from '../reducers/lists';\r\nimport { itemsReducer } from '../reducers/items';\r\nimport { addListOrItemMiddleware } from '../middleware/middleware';\r\nimport { loadState, saveState } from '../localStorage';\r\nimport { debounce } from '../helpers';\r\n\r\nconst persistedState = loadState();\r\nconst rootReducer = combineReducers({ listsReducer, itemsReducer });\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  applyMiddleware(addListOrItemMiddleware, thunkMiddleware, logger)\r\n);\r\n\r\nstore.subscribe(\r\n  debounce(() => {\r\n    saveState({\r\n      listsReducer: { lists: store.getState().listsReducer.lists },\r\n      itemsReducer: { items: store.getState().itemsReducer.items }\r\n    });\r\n  }, 1000)\r\n);\r\n\r\nexport default store;\r\n","export const FETCH_LISTS = 'FETCH_LISTS';\r\nexport const SET_CURRENT_LIST = 'SET_CURRENT_LIST';\r\nexport const EDIT_LIST = 'EDIT_LIST';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const ADD_LIST_WITH_ID = 'ADD_LIST_WITH_ID';\r\n\r\nexport const FETCH_ITEMS = 'FETCH_ITEMS';\r\nexport const SET_CURRENT_ITEMS = 'SET_CURRENT_ITEMS';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const TOGGLE_ITEM = 'TOGGLE_ITEM';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const ADD_ITEM_WITH_ID = 'ADD_ITEM_WITH_ID';\r\n","import {\r\n  ADD_ITEM, ADD_ITEM_WITH_ID, ADD_LIST, ADD_LIST_WITH_ID\r\n} from '../constants/action-types';\r\n\r\nexport const addListOrItemMiddleware = store => next => action => {\r\n  if (action.type === ADD_ITEM) {\r\n    const items = store.getState().itemsReducer.items;\r\n    const maxId = items.reduce((a, b) => {\r\n      return (a.id > b.id) ? a.id : b.id;\r\n    }, 0);\r\n    store.dispatch({\r\n      type: ADD_ITEM_WITH_ID,\r\n      payload: {\r\n        listId: action.payload.listId,\r\n        name: action.payload.name,\r\n        nextId: maxId + 1\r\n      }\r\n    });\r\n  }\r\n  if (action.type === ADD_LIST) {\r\n    const lists = store.getState().listsReducer.lists;\r\n    const maxId = lists.reduce((a, b) => {\r\n      return (a.id > b.id) ? a.id : b.id;\r\n    }, 0);\r\n    store.dispatch({\r\n      type: ADD_LIST_WITH_ID,\r\n      payload: {\r\n        title: action.payload.title,\r\n        nextId: maxId + 1,\r\n        modified: action.payload.modified\r\n      }\r\n    })\r\n  }\r\n  next(action);\r\n}\r\n","import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ showAddList }) => {\r\n  return (\r\n    <nav className=\"bg-yellow shadow-2 mb2\">\r\n      <h1 className=\"dib f2 pa3 mv0\">Lists</h1>\r\n      <button type=\"button\" onClick={showAddList}\r\n      className=\"b--none ml2 bg-transparent b pointer add-list\">\r\n        <span className=\"f2\">+</span>\r\n        <span className=\"f3 dn di-ns\"> Add list</span>\r\n      </button>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport './List.css';\r\n\r\nconst List = ({ list, items, onClickList, onEnterList }) => {\r\n\treturn (\r\n\t\t<div className=\"pa2 ma3 bg-yellow pointer shadow-3 noselect list\"\r\n\t\ttabIndex=\"0\" onClick={onClickList(list, list.id)}\r\n\t\tonKeyPress={onEnterList(list, list.id)}>\r\n\t\t\t<h3 className=\"f3-l f4-m f5 truncate\">{list.title}</h3>\r\n\t\t\t<p>{list.modified.toLocaleDateString()}</p>\r\n\t\t\t<p className=\"truncate\">\r\n\t\t\t\t{\r\n\t\t\t\t\titems.slice(0, 5).map((item) => {\r\n\t\t\t\t\t\treturn <span key={item.id}>- {item.name} </span>;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default List;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport List from '../List/List';\r\nimport './Lists.css';\r\nimport { requestLists, setCurrentList } from '../../actions/lists';\r\nimport { requestItems, setCurrentItems } from '../../actions/items';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    lists: state.listsReducer.lists,\r\n    items: state.itemsReducer.items\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRequestLists: () => dispatch(requestLists()),\r\n    onRequestItems: () => dispatch(requestItems()),\r\n    onSetCurrentList: (list) => dispatch(setCurrentList(list)),\r\n    onSetCurrentItems: (items) => dispatch(setCurrentItems(items))\r\n  }\r\n}\r\n\r\nclass Lists extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestLists();\r\n    this.props.onRequestItems();\r\n  }\r\n\r\n  /* handle selecting a list */\r\n  onClickList = (list, listId) => () => {\r\n    this.handleSelectList(list, listId);\r\n  }\r\n\r\n  onEnterList = (list, listId) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleSelectList(list, listId);\r\n    }\r\n  }\r\n\r\n  handleSelectList = (list, listId) => {\r\n    this.props.onSetCurrentList(list);\r\n    this.props.onSetCurrentItems(listId);\r\n    this.props.scrollToCurrentList();\r\n  }\r\n\r\n  render() {\r\n    const { lists, items, isShowLists, showLists, hideLists } = this.props;\r\n    let listComponents = [];\r\n    let itemsProp = [];\r\n\r\n    lists.forEach((list) => {\r\n      items.forEach((item) => {\r\n        if (list.id === item.list_id) {\r\n          itemsProp = itemsProp.concat(item);\r\n        }\r\n      });\r\n      listComponents = listComponents.concat(\r\n        <List\r\n          key={list.id}\r\n          list={list}\r\n          items={itemsProp}\r\n          onClickList={this.onClickList}\r\n          onEnterList={this.onEnterList}\r\n        />\r\n      );\r\n      itemsProp = [];\r\n    });\r\n\r\n    return (\r\n      <div className=\"fl w-25-l w-third-m w-100\">\r\n        {\r\n          isShowLists ?\r\n            <button type=\"button\" onClick={hideLists}\r\n            className=\"bg-yellow b--none pointer pv1 ml3 mv1 toggle-lists\">\r\n              Hide lists &#9650;\r\n            </button>\r\n          :\r\n            <button type=\"button\" onClick={showLists}\r\n            className=\"bg-yellow b--none pointer pv1 ml3 mv1 toggle-lists\">\r\n              Show lists &#9660;\r\n            </button>\r\n        }\r\n        <div className={`lists ${isShowLists ? '' : 'dn'}`}>\r\n          {\r\n            listComponents.length > 0 ?\r\n              <Fragment>\r\n                {listComponents}\r\n                <hr className=\"dn-ns moon-gray\" />\r\n              </Fragment>\r\n            :\r\n              <p className=\"ml3\">No lists found</p>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Lists);\r\n","import {\r\n  FETCH_LISTS, SET_CURRENT_LIST, EDIT_LIST, DELETE_LIST, ADD_LIST\r\n} from '../constants/action-types';\r\nimport { loadState } from '../localStorage';\r\n\r\nexport const requestLists = () => (dispatch) => {\r\n  const lists = loadState() === undefined ? [] : loadState().listsReducer.lists;\r\n  dispatch({ type: FETCH_LISTS, payload: lists });\r\n}\r\n\r\nexport const setCurrentList = (list) => ({\r\n  type: SET_CURRENT_LIST,\r\n  payload: list\r\n});\r\n\r\nexport const editList = (id, title, modified) => ({\r\n  type: EDIT_LIST,\r\n  payload: { id, title, modified }\r\n});\r\n\r\nexport const deleteList = (listId) => ({\r\n  type: DELETE_LIST,\r\n  payload: listId\r\n});\r\n\r\nexport const addList = (title) => ({\r\n  type: ADD_LIST,\r\n  payload: { title, modified: new Date() }\r\n});\r\n","import {\r\n  FETCH_ITEMS, SET_CURRENT_ITEMS, DELETE_ITEM, TOGGLE_ITEM, ADD_ITEM\r\n} from '../constants/action-types';\r\nimport { loadState } from '../localStorage';\r\n\r\nexport const requestItems = () => (dispatch) => {\r\n  const items = loadState() === undefined ? [] : loadState().itemsReducer.items;\r\n  dispatch({ type: FETCH_ITEMS, payload: items });\r\n}\r\n\r\nexport const setCurrentItems = (listId) => ({\r\n  type: SET_CURRENT_ITEMS,\r\n  payload: listId\r\n});\r\n\r\nexport const deleteItem = (itemId) => ({\r\n  type: DELETE_ITEM,\r\n  payload: itemId\r\n});\r\n\r\nexport const toggleItem = (itemId, checked) => ({\r\n  type: TOGGLE_ITEM,\r\n  payload: { itemId, checked }\r\n});\r\n\r\nexport const addItem = (listId, name) => ({\r\n  type: ADD_ITEM,\r\n  payload: { listId, name }\r\n});\r\n","import React from 'react';\r\n\r\nconst ListItem = ({\r\n  id, listId, checked, name, onClick, onClickDelete, onKeyPress\r\n}) => {\r\n  return (\r\n    <li className={\"noselect\" + (checked ? ' checked' : '')}\r\n    tabIndex=\"0\" onKeyUp={onKeyPress(listId, id, checked)}\r\n    onClick={onClick(listId, id, checked)}>\r\n      {name}\r\n      <span className=\"close\" title=\"Delete item\"\r\n      onClick={onClickDelete(listId, id)}>\r\n        &times;\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\n\r\nconst AddItem = ({\r\n  listId, newItemName, onSetNewItemName, onClickAddItem, onKeyPressAddItem\r\n}) => {\r\n  return (\r\n    <div className=\"mt3\">\r\n      <input\r\n        type=\"text\"\r\n        value={newItemName}\r\n        onChange={onSetNewItemName}\r\n        onKeyPress={onKeyPressAddItem(listId, newItemName)}\r\n        placeholder=\"Item name\"\r\n        maxLength=\"100\"\r\n        className=\"pa3 b--none w-100 w-70-m w-auto-l\"\r\n      />\r\n      <button type=\"button\" onClick={onClickAddItem(listId, newItemName)}\r\n      className=\"white b--none ph4 pv3 mt3 mt0-ns b pointer bg-green hover-bg-dark-green w-30-m w-auto-l\">\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddItem;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editList, deleteList } from '../../actions/lists';\r\nimport { deleteItem, toggleItem, addItem } from '../../actions/items';\r\nimport { checkEmptyString } from '../../helpers';\r\nimport ListItem from '../ListItem/ListItem';\r\nimport AddItem from '../AddItem/AddItem';\r\nimport './CurrentList.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.listsReducer.currentList,\r\n    items: state.itemsReducer.currentItems\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onEditList: (id, title, modified) => dispatch(editList(id, title, modified)),\r\n    onDeleteList: (listId) => dispatch(deleteList(listId)),\r\n    onDeleteItem: (itemId) => dispatch(deleteItem(itemId)),\r\n    onToggleItem: (itemId, checked) => dispatch(toggleItem(itemId, checked)),\r\n    onAddItem: (listId, name) => dispatch(addItem(listId, name))\r\n  }\r\n}\r\n\r\nclass CurrentList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.editTitle = React.createRef();\r\n    this.state = {\r\n      isEditTitle: false,\r\n      newListTitle: '',\r\n      newItemName: ''\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      !prevProps.list && !this.props.list &&\r\n      this.props.list.id !== prevProps.list.id\r\n    ) {\r\n      this.hideEditTitle();\r\n    }\r\n  }\r\n\r\n  focusEditTitle = () => {\r\n    this.editTitle.current.focus();\r\n  }\r\n\r\n  hideEditTitle = () => {\r\n    this.setState({\r\n      isEditTitle: false,\r\n      newListTitle: ''\r\n    });\r\n  }\r\n\r\n  showEditTitle = () => {\r\n    this.setState(\r\n      {\r\n        isEditTitle: true,\r\n        newListTitle: this.props.list.title\r\n      },\r\n      () => this.focusEditTitle()\r\n    );\r\n  }\r\n\r\n  onChangeListTitle = (e) => {\r\n    this.setState({ newListTitle: e.target.value });\r\n  }\r\n\r\n  /* handle editing a list */\r\n  onClickEditTitle = (listId, title) => () => {\r\n    this.handleEditTitle(listId, title);\r\n  }\r\n\r\n  onKeyPressEditTitle = (listId, title) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleEditTitle(listId, title);\r\n    }\r\n  }\r\n\r\n  handleEditTitle = (listId, title) => {\r\n    if (checkEmptyString(title)) {\r\n      return;\r\n    }\r\n    this.props.onEditList(listId, title, new Date());\r\n    this.setState({\r\n      newListTitle: '',\r\n      isEditTitle: false\r\n    });\r\n  }\r\n\r\n  /* handle deleting a list */\r\n  handleDeleteList = (listId) => () => {\r\n    if (window.confirm('Are you sure you want to delete this list?')) {\r\n      this.props.onDeleteList(listId);\r\n      this.hideEditTitle();\r\n      this.setState({ newItemName: '' });\r\n      this.props.showLists();\r\n    }\r\n  }\r\n\r\n  /* handle toggling an item and deleting an item */\r\n  onClickDeleteItem = (listId, itemId) => (e) => {\r\n    e.stopPropagation();\r\n    this.handleDeleteItem(listId, itemId);\r\n  }\r\n\r\n  onClickItem = (listId, itemId, checked) => () => {\r\n    this.handleToggleItem(listId, itemId, checked);\r\n  }\r\n\r\n  onKeyPressItem = (listId, itemId, checked) => (e) => {\r\n    if (e.key === 'Delete') {\r\n      this.handleDeleteItem(listId, itemId);\r\n    } else if (e.key === 'Enter') {\r\n      this.handleToggleItem(listId, itemId, checked);\r\n    }\r\n  }\r\n\r\n  handleDeleteItem = (listId, itemId) => {\r\n    if (window.confirm('Are you sure you want to delete this item?')) {\r\n      this.props.onDeleteItem(itemId);\r\n      this.props.onEditList(listId, this.props.list.title, new Date());\r\n    }\r\n  }\r\n\r\n  handleToggleItem = (listId, itemId, checked) => {\r\n    this.props.onToggleItem(itemId, checked);\r\n    this.props.onEditList(listId, this.props.list.title, new Date());\r\n  }\r\n\r\n  /* handle adding an item */\r\n  onClickAddItem = (listId, name) => () => {\r\n    this.handleAddItem(listId, name);\r\n  }\r\n\r\n  onKeyPressAddItem = (listId, name) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleAddItem(listId, name);\r\n    }\r\n  }\r\n\r\n  handleAddItem = (listId, name) => {\r\n    if (checkEmptyString(name)) {\r\n      return;\r\n    }\r\n    this.props.onAddItem(listId, name);\r\n    this.props.onEditList(listId, this.props.list.title, new Date());\r\n    this.setState({ newItemName: '' });\r\n  }\r\n\r\n  onChangeNewItemName = (e) => {\r\n    this.setState({ newItemName: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { list, items } = this.props;\r\n    const { isEditTitle, newListTitle, newItemName } = this.state;\r\n    if (!list) return null;\r\n\r\n    return (\r\n      <div className=\"fl w-75-l w-two-thirds-m w-100 pa3\">\r\n        <button type=\"button\" onClick={this.handleDeleteList(list.id)}\r\n        className=\"white b--none ph4 pv3 b pointer bg-red hover-bg-dark-red\">\r\n          Delete list\r\n        </button>\r\n        {\r\n          isEditTitle ?\r\n            <Fragment>\r\n              <button type=\"button\"\r\n              onClick={this.onClickEditTitle(list.id, newListTitle)}\r\n              className=\"white b--none ph4 pv3 b pointer bg-green hover-bg-dark-green\">\r\n                Save title\r\n              </button>\r\n              <button type=\"button\" onClick={this.hideEditTitle}\r\n              className=\"white b--none ph4 pv3 b pointer bg-blue hover-bg-dark-blue\">\r\n                Don't save title\r\n              </button>\r\n            </Fragment>\r\n          :\r\n            <button type=\"button\" onClick={this.showEditTitle}\r\n            className=\"white b--none ph4 pv3 b pointer bg-blue hover-bg-dark-blue\">\r\n              Edit title\r\n            </button>\r\n        }\r\n        {\r\n          isEditTitle ?\r\n            <input\r\n              type=\"text\"\r\n              value={newListTitle}\r\n              onChange={this.onChangeListTitle}\r\n              onKeyPress={this.onKeyPressEditTitle(list.id, newListTitle)}\r\n              placeholder=\"List title\"\r\n              className=\"pa3 b--none mv4 db\"\r\n              maxLength=\"50\"\r\n              ref={this.editTitle}\r\n            />\r\n          :\r\n            <h2 className=\"f2 mv4\"\r\n            style={{ minHeight: '50.4px', overflowWrap: 'break-word' }}>\r\n              {list.title}\r\n            </h2>\r\n        }\r\n        <p>{list.modified.toLocaleDateString()}</p>\r\n        <ul>\r\n          {\r\n            items.length > 0 ?\r\n              items.map((item) => {\r\n                return (\r\n                  <ListItem\r\n                    key={item.id}\r\n                    id={item.id}\r\n                    listId={list.id}\r\n                    checked={item.checked}\r\n                    name={item.name}\r\n                    onClick={this.onClickItem}\r\n                    onClickDelete={this.onClickDeleteItem}\r\n                    onKeyPress={this.onKeyPressItem}\r\n                  />\r\n                );\r\n              })\r\n            :\r\n              <p>No items</p>\r\n          }\r\n        </ul>\r\n        <AddItem\r\n          listId={list.id}\r\n          newItemName={newItemName}\r\n          onSetNewItemName={this.onChangeNewItemName}\r\n          onClickAddItem={this.onClickAddItem}\r\n          onKeyPressAddItem={this.onKeyPressAddItem}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addList } from '../../actions/lists';\r\nimport { checkEmptyString } from '../../helpers';\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddList: (title) => dispatch(addList(title))\r\n  };\r\n}\r\n\r\nclass AddList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { newListTitle: '' };\r\n  }\r\n\r\n  onChangeNewListTitle = (e) => {\r\n    this.setState({ newListTitle: e.target.value });\r\n  }\r\n\r\n  onClickAddList = (title) => () => {\r\n    this.handleAddList(title);\r\n  }\r\n\r\n  onKeyPressAddList = (title) => (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleAddList(title);\r\n    }\r\n  }\r\n\r\n  handleAddList = (title) => {\r\n    if (checkEmptyString(title)) {\r\n      return;\r\n    }\r\n    this.props.scrollToCurrentList();\r\n    this.props.onAddList(title);\r\n    this.setState({ newListTitle: '' });\r\n  }\r\n\r\n  render() {\r\n    const { newListTitle } = this.state;\r\n\r\n    return (\r\n      <div className=\"fl w-75-l w-two-thirds-m w-100 pa3\">\r\n        <h2>Add list</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={newListTitle}\r\n          onChange={this.onChangeNewListTitle}\r\n          onKeyPress={this.onKeyPressAddList(newListTitle)}\r\n          placeholder=\"List title\"\r\n          className=\"pa3 b--none w-100 w-auto-ns\"\r\n          maxLength=\"50\"\r\n          autoFocus\r\n        />\r\n        <button type=\"button\" onClick={this.onClickAddList(newListTitle)}\r\n        className=\"white b--none ph4 pv3 b pointer bg-green hover-bg-dark-green\">\r\n          Add\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddList);\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"ma3 tc\" style={{ clear: 'both' }}>\r\n      Icons made by <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">\r\n      Smashicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n      www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n      CC 3.0 BY</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { debounce } from './helpers';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Lists from './components/Lists/Lists';\r\nimport CurrentList from './components/CurrentList/CurrentList';\r\nimport AddList from './components/AddList/AddList';\r\nimport Footer from './components/Footer/Footer';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isShowLists: true,\r\n      isShowAddList: false,\r\n      windowWidth: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', debounce(this.onWindowResize, 250));\r\n    this.onWindowResize();\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    const windowWidth = window.innerWidth;\r\n    if (windowWidth === this.state.windowWidth) {\r\n      return;\r\n    }\r\n    this.setState({ windowWidth });\r\n    if (windowWidth >= 480) {\r\n      this.showLists();\r\n    }\r\n  }\r\n\r\n  showAddList = () => {\r\n    this.setState({ isShowAddList: true });\r\n    if (this.state.windowWidth < 480) {\r\n      this.hideLists();\r\n    }\r\n  }\r\n\r\n  hideAddList = () => this.setState({ isShowAddList: false });\r\n\r\n  scrollToCurrentList = () => {\r\n    if (this.state.windowWidth < 480) {\r\n      this.hideLists();\r\n    }\r\n    this.hideAddList();\r\n  }\r\n\r\n  showLists = () => this.setState({ isShowLists: true });\r\n\r\n  hideLists = () => this.setState({ isShowLists: false });\r\n\r\n  render() {\r\n    const { isShowLists, isShowAddList } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Navigation showAddList={this.showAddList} />\r\n        <Lists\r\n          isShowLists={isShowLists}\r\n          showLists={this.showLists}\r\n          hideLists={this.hideLists}\r\n          scrollToCurrentList={this.scrollToCurrentList}\r\n        />\r\n        {\r\n          isShowAddList ?\r\n            <AddList scrollToCurrentList={this.scrollToCurrentList} />\r\n          :\r\n            <CurrentList showLists={this.showLists} />\r\n        }\r\n        <Footer />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}